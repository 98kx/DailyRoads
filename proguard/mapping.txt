android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.e:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    void dismiss() -> a
    void dismissInternal(boolean) -> a
    android.app.Dialog getDialog() -> b
    int getTheme() -> c
    void setCancelable(boolean) -> b
    void onAttach(android.app.Activity) -> a
    void onDetach() -> d
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> e
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> f
    void onDestroyView() -> g
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> f
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> h
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.os.Bundle getArguments() -> i
    void setTargetFragment(android.support.v4.app.Fragment,int) -> a
    android.support.v4.app.Fragment getTargetFragment() -> j
    int getTargetRequestCode() -> k
    android.support.v4.app.FragmentActivity getActivity() -> l
    android.content.res.Resources getResources() -> m
    java.lang.String getString(int) -> a
    android.support.v4.app.FragmentManager getFragmentManager() -> n
    android.support.v4.app.FragmentManager getChildFragmentManager() -> o
    boolean isAdded() -> p
    boolean isDetached() -> q
    boolean isHidden() -> r
    void onHiddenChanged(boolean) -> c
    boolean getRetainInstance() -> s
    void setMenuVisibility(boolean) -> d
    void setUserVisibleHint(boolean) -> e
    void startActivity(android.content.Intent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> t
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> g
    void onStart() -> e
    void onResume() -> u
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> v
    void onStop() -> f
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> g
    void onDestroy() -> w
    void initState() -> x
    void onDetach() -> d
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> y
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> z
    void performCreate(android.os.Bundle) -> h
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> i
    void performStart() -> A
    void performResume() -> B
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> C
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> j
    void performPause() -> D
    void performStop() -> E
    void performReallyStop() -> F
    void performDestroyView() -> G
    void performDestroy() -> H
android.support.v4.app.Fragment$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.g:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.h:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.i:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.k:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.l:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.m:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.n:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.o:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack(int,int) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.p:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.q:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.s:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.t:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.u:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.v:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.w:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> a
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.x:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.y:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.z:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.aa:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.ab:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> android.support.v4.app.ac:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ad:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ae:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.af:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ag:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ah:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> c
    float getPageWidth(int) -> d
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> a
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.y:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.z:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.aa:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.ab:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.ac:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ad:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ae:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.am:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.an:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ao:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ap:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.aq:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ar:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.as:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.at:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.au:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.av:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.aw:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ax:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ay:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.az:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ba:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bb:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bc:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bd:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.be:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bf:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bg:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bh:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bi:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bj:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bk:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bl:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bm:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bn:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.h:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.n:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.j256.ormlite.android.AndroidCompiledStatement -> com.a.a.a.a:
    com.j256.ormlite.logger.Logger logger -> a
    java.lang.String sql -> b
    android.database.sqlite.SQLiteDatabase db -> c
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> d
    java.lang.String[] NO_STRING_ARGS -> e
    android.database.Cursor cursor -> f
    java.util.List args -> g
    java.lang.Integer max -> h
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> a
    int runExecute() -> a
    void close() -> b
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> a
    void setMaxRows(int) -> a
    android.database.Cursor getCursor() -> c
    java.lang.String toString() -> toString
    void isInPrep() -> d
    int execSql(java.lang.String,java.lang.String) -> a
    java.lang.Object[] getArgArray() -> e
    java.lang.String[] getStringArray() -> f
com.j256.ormlite.android.AndroidCompiledStatement$1 -> com.a.a.a.b:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.android.AndroidConnectionSource -> com.a.a.a.c:
    com.j256.ormlite.logger.Logger logger -> a
    android.database.sqlite.SQLiteOpenHelper helper -> b
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> c
    com.j256.ormlite.android.AndroidDatabaseConnection connection -> d
    boolean isOpen -> e
    com.j256.ormlite.db.DatabaseType databaseType -> f
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> a
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> b
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> a
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> b
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> c
    void close() -> c
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> d
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection -> com.a.a.a.d:
    com.j256.ormlite.logger.Logger logger -> b
    android.database.sqlite.SQLiteDatabase db -> c
    boolean readWrite -> d
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[]) -> a
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> a
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> a
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> a
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> a
    long queryForLong(java.lang.String) -> a
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],java.lang.String) -> a
    void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> a
    java.lang.String[] toStrings(java.lang.Object[]) -> a
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection$1 -> com.a.a.a.e:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.android.AndroidDatabaseResults -> com.a.a.a.f:
    android.database.Cursor cursor -> a
    java.lang.String[] columnNames -> b
    java.util.Map columnNameMap -> c
    com.j256.ormlite.dao.ObjectCache objectCache -> d
    com.j256.ormlite.db.DatabaseType databaseType -> e
    int getColumnCount() -> a
    boolean first() -> b
    boolean next() -> c
    int findColumn(java.lang.String) -> a
    java.lang.String getString(int) -> a
    boolean getBoolean(int) -> b
    char getChar(int) -> c
    byte getByte(int) -> d
    byte[] getBytes(int) -> e
    short getShort(int) -> f
    int getInt(int) -> g
    long getLong(int) -> h
    float getFloat(int) -> i
    double getDouble(int) -> j
    java.sql.Timestamp getTimestamp(int) -> k
    java.math.BigDecimal getBigDecimal(int) -> l
    boolean wasNull(int) -> m
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> d
    java.lang.String toString() -> toString
    int lookupColumn(java.lang.String) -> b
com.j256.ormlite.android.DatabaseTableConfigUtil -> com.a.a.a.g:
    java.lang.Class annotationFactoryClazz -> a
    java.lang.reflect.Field elementsField -> b
    java.lang.Class annotationMemberClazz -> c
    java.lang.reflect.Field nameField -> d
    java.lang.reflect.Field valueField -> e
    int workedC -> f
    int[] configFieldNums -> g
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    int[] lookupClasses() -> a
    int configFieldNameToNum(java.lang.String) -> a
    com.j256.ormlite.field.DatabaseFieldConfig configFromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> a
    com.j256.ormlite.field.DatabaseFieldConfig buildConfig(com.j256.ormlite.field.DatabaseField,java.lang.String,java.lang.reflect.Field) -> a
    void assignConfigField(int,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.reflect.Field,java.lang.Object) -> a
    java.lang.String valueIfNotBlank(java.lang.String) -> b
com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample -> com.a.a.a.h:
    java.lang.String field -> a
com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper -> com.a.a.a.a.a:
    com.j256.ormlite.logger.Logger logger -> a
    com.j256.ormlite.android.AndroidConnectionSource connectionSource -> b
    boolean isOpen -> c
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> a
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void close() -> close
    com.j256.ormlite.dao.Dao getDao(java.lang.Class) -> a
    java.lang.String toString() -> toString
com.j256.ormlite.dao.BaseDaoImpl -> com.a.a.b.a:
    boolean initialized -> i
    com.j256.ormlite.stmt.StatementExecutor statementExecutor -> a
    com.j256.ormlite.db.DatabaseType databaseType -> b
    java.lang.Class dataClass -> c
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> d
    com.j256.ormlite.table.TableInfo tableInfo -> e
    com.j256.ormlite.support.ConnectionSource connectionSource -> f
    com.j256.ormlite.dao.CloseableIterator lastIterator -> g
    com.j256.ormlite.table.ObjectFactory objectFactory -> h
    java.lang.ThreadLocal daoConfigLevelLocal -> j
    com.j256.ormlite.dao.ObjectCache objectCache -> k
    void initialize() -> a
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> b
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> a
    java.util.List queryForFieldValues(java.util.Map) -> a
    int create(java.lang.Object) -> a
    int delete(java.lang.Object) -> b
    com.j256.ormlite.dao.CloseableIterator iterator() -> c
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> d
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> a
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> b
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> a
    java.lang.Class getDataClass() -> e
    com.j256.ormlite.table.ObjectFactory getObjectFactory() -> f
    com.j256.ormlite.table.TableInfo getTableInfo() -> g
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> a
    void checkForInitialized() -> h
    com.j256.ormlite.dao.CloseableIterator createIterator(int) -> b
    com.j256.ormlite.dao.CloseableIterator createIterator(com.j256.ormlite.stmt.PreparedQuery,int) -> b
    java.util.List queryForFieldValues(java.util.Map,boolean) -> a
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$1 -> com.a.a.b.b:
    com.j256.ormlite.dao.BaseDaoImpl$DaoConfigArray initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.dao.BaseDaoImpl$4 -> com.a.a.b.c:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$5 -> com.a.a.b.d:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$DaoConfigArray -> com.a.a.b.e:
    com.j256.ormlite.dao.BaseDaoImpl[] daoArray -> a
    int daoArrayC -> b
    void addDao(com.j256.ormlite.dao.BaseDaoImpl) -> a
    int size() -> a
    com.j256.ormlite.dao.BaseDaoImpl get(int) -> a
    void clear() -> b
com.j256.ormlite.dao.BaseForeignCollection -> com.a.a.b.f:
    com.j256.ormlite.dao.Dao dao -> a
    java.lang.String columnName -> b
    java.lang.Object parentId -> c
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> d
    java.lang.String orderColumn -> e
    java.lang.Object parent -> f
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> a
com.j256.ormlite.dao.CloseableIterable -> com.a.a.b.g:
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> d
com.j256.ormlite.dao.CloseableIterator -> com.a.a.b.h:
    void close() -> a
    void moveToNext() -> b
com.j256.ormlite.dao.CloseableWrappedIterable -> com.a.a.b.i:
com.j256.ormlite.dao.Dao -> com.a.a.b.j:
    java.util.List queryForFieldValues(java.util.Map) -> a
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> b
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> a
    int create(java.lang.Object) -> a
    int delete(java.lang.Object) -> b
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> b
    java.lang.Class getDataClass() -> e
    com.j256.ormlite.table.ObjectFactory getObjectFactory() -> f
com.j256.ormlite.dao.DaoManager -> com.a.a.b.k:
    java.util.Map configMap -> a
    java.util.Map classMap -> b
    java.util.Map tableConfigMap -> c
    com.j256.ormlite.logger.Logger logger -> d
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> a
    void registerDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> a
    void unregisterDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> b
    void addDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> a
    void removeDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> b
    void addDaoToTableMap(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource,com.j256.ormlite.dao.Dao) -> a
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource) -> a
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource) -> a
    java.lang.reflect.Constructor findConstructor(java.lang.Class,java.lang.Object[]) -> a
    java.lang.Object createDaoFromConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> b
    com.j256.ormlite.dao.Dao doCreateDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> b
com.j256.ormlite.dao.DaoManager$ClassConnectionSource -> com.a.a.b.l:
    com.j256.ormlite.support.ConnectionSource connectionSource -> a
    java.lang.Class clazz -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource -> com.a.a.b.m:
    com.j256.ormlite.support.ConnectionSource connectionSource -> a
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.EagerForeignCollection -> com.a.a.b.n:
    java.util.List results -> b
    com.j256.ormlite.dao.CloseableIterator iterator() -> b
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> d
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> c
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
    java.util.List access$000(com.j256.ormlite.dao.EagerForeignCollection) -> a
com.j256.ormlite.dao.EagerForeignCollection$1 -> com.a.a.b.o:
    int offset -> b
    com.j256.ormlite.dao.EagerForeignCollection this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void close() -> a
    void moveToNext() -> b
com.j256.ormlite.dao.ForeignCollection -> com.a.a.b.p:
com.j256.ormlite.dao.LazyForeignCollection -> com.a.a.b.q:
    com.j256.ormlite.dao.CloseableIterator lastIterator -> b
    com.j256.ormlite.dao.CloseableIterator iterator() -> b
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> d
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> c
    com.j256.ormlite.dao.CloseableIterator seperateIteratorThrow() -> e
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.ObjectCache -> com.a.a.b.r:
    java.lang.Object get(java.lang.Class,java.lang.Object) -> a
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Class,java.lang.Object) -> b
com.j256.ormlite.db.BaseDatabaseType -> com.a.a.c.a:
    java.lang.String DEFAULT_SEQUENCE_SUFFIX -> a
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> a
    void appendStringType(java.lang.StringBuilder,int) -> a
    void appendLongStringType(java.lang.StringBuilder,int) -> b
    void appendDateType(java.lang.StringBuilder,int) -> c
    void appendBooleanType(java.lang.StringBuilder,int) -> d
    void appendCharType(java.lang.StringBuilder,int) -> e
    void appendByteType(java.lang.StringBuilder,int) -> f
    void appendShortType(java.lang.StringBuilder,int) -> g
    void appendIntegerType(java.lang.StringBuilder,int) -> k
    void appendLongType(com.j256.ormlite.field.FieldType,java.lang.StringBuilder,int) -> a
    void appendFloatType(java.lang.StringBuilder,int) -> l
    void appendDoubleType(java.lang.StringBuilder,int) -> m
    void appendByteArrayType(java.lang.StringBuilder,int) -> h
    void appendSerializableType(java.lang.StringBuilder,int) -> i
    void appendBigDecimalNumericType(java.lang.StringBuilder,int) -> j
    void appendDefaultValue(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    void configureGeneratedIdSequence(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> a
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> b
    void configureId(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> b
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> a
    boolean generatedIdSqlAtEnd() -> a
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> b
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> a
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> a
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> b
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> a
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> a
    boolean isIdSequenceNeeded() -> b
    boolean isVarcharFieldWidthSupported() -> c
    boolean isLimitSqlSupported() -> d
    boolean isOffsetLimitArgument() -> e
    boolean isLimitAfterSelect() -> f
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> a
    void appendOffsetValue(java.lang.StringBuilder,long) -> a
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> c
    void appendCreateTableSuffix(java.lang.StringBuilder) -> a
    boolean isCreateTableReturnsZero() -> g
    boolean isCreateTableReturnsNegative() -> h
    boolean isEntityNamesMustBeUpCase() -> i
    boolean isCreateIfNotExistsSupported() -> j
    boolean isCreateIndexIfNotExistsSupported() -> k
    boolean isSelectSequenceBeforeInsert() -> l
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    void appendCanBeNull(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> a
    void addSingleUnique(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> a
com.j256.ormlite.db.BaseDatabaseType$1 -> com.a.a.c.b:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter -> com.a.a.c.c:
    com.j256.ormlite.field.SqlType getSqlType() -> a
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
com.j256.ormlite.db.BaseSqliteDatabaseType -> com.a.a.c.d:
    com.j256.ormlite.field.FieldConverter booleanConverter -> b
    void appendLongType(com.j256.ormlite.field.FieldType,java.lang.StringBuilder,int) -> a
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> b
    boolean generatedIdSqlAtEnd() -> a
    boolean isVarcharFieldWidthSupported() -> c
    boolean isCreateTableReturnsZero() -> g
    boolean isCreateIfNotExistsSupported() -> j
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> a
com.j256.ormlite.db.BaseSqliteDatabaseType$1 -> com.a.a.c.e:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.db.DatabaseType -> com.a.a.c.f:
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> a
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> a
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> b
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> a
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> b
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> a
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> a
    boolean isIdSequenceNeeded() -> b
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> a
    boolean isLimitSqlSupported() -> d
    boolean isLimitAfterSelect() -> f
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> a
    boolean isOffsetLimitArgument() -> e
    void appendOffsetValue(java.lang.StringBuilder,long) -> a
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> c
    void appendCreateTableSuffix(java.lang.StringBuilder) -> a
    boolean isCreateTableReturnsZero() -> g
    boolean isCreateTableReturnsNegative() -> h
    boolean isEntityNamesMustBeUpCase() -> i
    boolean isCreateIfNotExistsSupported() -> j
    boolean isCreateIndexIfNotExistsSupported() -> k
    boolean isSelectSequenceBeforeInsert() -> l
    java.lang.String getDatabaseName() -> m
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
com.j256.ormlite.db.SqliteAndroidDatabaseType -> com.a.a.c.g:
    java.lang.String getDatabaseName() -> m
    void appendDateType(java.lang.StringBuilder,int) -> c
    void appendBooleanType(java.lang.StringBuilder,int) -> d
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> a
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
com.j256.ormlite.db.SqliteAndroidDatabaseType$1 -> com.a.a.c.h:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.field.BaseFieldConverter -> com.a.a.d.a:
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> b
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    boolean isStreamType() -> b
com.j256.ormlite.field.DataPersister -> com.a.a.d.b:
    java.lang.Class[] getAssociatedClasses() -> c
    java.lang.String[] getAssociatedClassNames() -> d
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
    java.lang.Object convertIdNumber(java.lang.Number) -> a
    boolean isValidGeneratedType() -> e
    boolean isValidForField(java.lang.reflect.Field) -> a
    boolean isEscapedDefaultValue() -> f
    boolean isEscapedValue() -> g
    boolean isPrimitive() -> h
    boolean isComparable() -> i
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
    boolean isSelfGeneratedId() -> l
    java.lang.Object generateId() -> m
    int getDefaultWidth() -> n
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.DataPersisterManager -> com.a.a.d.c:
    com.j256.ormlite.field.DataPersister DEFAULT_ENUM_PERSISTER -> a
    java.util.Map builtInMap -> b
    java.util.List registeredPersisters -> c
    com.j256.ormlite.field.DataPersister lookupForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.DataType -> com.a.a.d.d:
    com.j256.ormlite.field.DataType STRING -> a
    com.j256.ormlite.field.DataType LONG_STRING -> b
    com.j256.ormlite.field.DataType STRING_BYTES -> c
    com.j256.ormlite.field.DataType BOOLEAN -> d
    com.j256.ormlite.field.DataType BOOLEAN_OBJ -> e
    com.j256.ormlite.field.DataType DATE -> f
    com.j256.ormlite.field.DataType DATE_LONG -> g
    com.j256.ormlite.field.DataType DATE_STRING -> h
    com.j256.ormlite.field.DataType CHAR -> i
    com.j256.ormlite.field.DataType CHAR_OBJ -> j
    com.j256.ormlite.field.DataType BYTE -> k
    com.j256.ormlite.field.DataType BYTE_ARRAY -> l
    com.j256.ormlite.field.DataType BYTE_OBJ -> m
    com.j256.ormlite.field.DataType SHORT -> n
    com.j256.ormlite.field.DataType SHORT_OBJ -> o
    com.j256.ormlite.field.DataType INTEGER -> p
    com.j256.ormlite.field.DataType INTEGER_OBJ -> q
    com.j256.ormlite.field.DataType LONG -> r
    com.j256.ormlite.field.DataType LONG_OBJ -> s
    com.j256.ormlite.field.DataType FLOAT -> t
    com.j256.ormlite.field.DataType FLOAT_OBJ -> u
    com.j256.ormlite.field.DataType DOUBLE -> v
    com.j256.ormlite.field.DataType DOUBLE_OBJ -> w
    com.j256.ormlite.field.DataType SERIALIZABLE -> x
    com.j256.ormlite.field.DataType ENUM_STRING -> y
    com.j256.ormlite.field.DataType ENUM_INTEGER -> z
    com.j256.ormlite.field.DataType UUID -> A
    com.j256.ormlite.field.DataType BIG_INTEGER -> B
    com.j256.ormlite.field.DataType BIG_DECIMAL -> C
    com.j256.ormlite.field.DataType BIG_DECIMAL_NUMERIC -> D
    com.j256.ormlite.field.DataType DATE_TIME -> E
    com.j256.ormlite.field.DataType SQL_DATE -> F
    com.j256.ormlite.field.DataType TIME_STAMP -> G
    com.j256.ormlite.field.DataType UNKNOWN -> H
    com.j256.ormlite.field.DataPersister dataPersister -> I
    com.j256.ormlite.field.DataType[] $VALUES -> J
    com.j256.ormlite.field.DataType[] values() -> values
    com.j256.ormlite.field.DataType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.field.DataPersister getDataPersister() -> a
com.j256.ormlite.field.DatabaseField -> com.a.a.d.e:
    java.lang.String columnName() -> a
    com.j256.ormlite.field.DataType dataType() -> b
    java.lang.String defaultValue() -> c
    int width() -> d
    boolean canBeNull() -> e
    boolean id() -> f
    boolean generatedId() -> g
    java.lang.String generatedIdSequence() -> h
    boolean foreign() -> i
    boolean useGetSet() -> j
    java.lang.String unknownEnumName() -> k
    boolean throwIfNull() -> l
    boolean persisted() -> m
    java.lang.String format() -> n
    boolean unique() -> o
    boolean uniqueCombo() -> p
    boolean index() -> q
    boolean uniqueIndex() -> r
    java.lang.String indexName() -> s
    java.lang.String uniqueIndexName() -> t
    boolean foreignAutoRefresh() -> u
    int maxForeignAutoRefreshLevel() -> v
    java.lang.Class persisterClass() -> w
    boolean allowGeneratedIdInsert() -> x
    java.lang.String columnDefinition() -> y
    boolean foreignAutoCreate() -> z
    boolean version() -> A
    java.lang.String foreignColumnName() -> B
com.j256.ormlite.field.DatabaseFieldConfig -> com.a.a.d.f:
    java.lang.Class DEFAULT_PERSISTER_CLASS -> a
    com.j256.ormlite.field.DataType DEFAULT_DATA_TYPE -> b
    java.lang.String fieldName -> c
    java.lang.String columnName -> d
    com.j256.ormlite.field.DataType dataType -> e
    com.j256.ormlite.field.DataPersister dataPersister -> f
    java.lang.String defaultValue -> g
    int width -> h
    boolean canBeNull -> i
    boolean id -> j
    boolean generatedId -> k
    java.lang.String generatedIdSequence -> l
    boolean foreign -> m
    com.j256.ormlite.table.DatabaseTableConfig foreignTableConfig -> n
    boolean useGetSet -> o
    java.lang.Enum unknownEnumValue -> p
    boolean throwIfNull -> q
    boolean persisted -> r
    java.lang.String format -> s
    boolean unique -> t
    boolean uniqueCombo -> u
    boolean index -> v
    java.lang.String indexName -> w
    boolean uniqueIndex -> x
    java.lang.String uniqueIndexName -> y
    boolean foreignAutoRefresh -> z
    int maxForeignAutoRefreshLevel -> A
    java.lang.Class persisterClass -> B
    boolean allowGeneratedIdInsert -> C
    java.lang.String columnDefinition -> D
    boolean foreignAutoCreate -> E
    boolean version -> F
    java.lang.String foreignColumnName -> G
    boolean foreignCollection -> H
    boolean foreignCollectionEager -> I
    int foreignCollectionMaxEagerLevel -> J
    java.lang.String foreignCollectionColumnName -> K
    java.lang.String foreignCollectionOrderColumnName -> L
    java.lang.String foreignCollectionForeignFieldName -> M
    java.lang.String getFieldName() -> a
    void setFieldName(java.lang.String) -> a
    java.lang.String getColumnName() -> b
    void setColumnName(java.lang.String) -> b
    void setDataType(com.j256.ormlite.field.DataType) -> a
    com.j256.ormlite.field.DataPersister getDataPersister() -> c
    void setDataPersister(com.j256.ormlite.field.DataPersister) -> a
    java.lang.String getDefaultValue() -> d
    void setDefaultValue(java.lang.String) -> c
    int getWidth() -> e
    void setWidth(int) -> a
    boolean isCanBeNull() -> f
    void setCanBeNull(boolean) -> a
    boolean isId() -> g
    void setId(boolean) -> b
    boolean isGeneratedId() -> h
    void setGeneratedId(boolean) -> c
    java.lang.String getGeneratedIdSequence() -> i
    void setGeneratedIdSequence(java.lang.String) -> d
    boolean isForeign() -> j
    void setForeign(boolean) -> d
    com.j256.ormlite.table.DatabaseTableConfig getForeignTableConfig() -> k
    boolean isUseGetSet() -> l
    void setUseGetSet(boolean) -> e
    java.lang.Enum getUnknownEnumValue() -> m
    void setUnknownEnumValue(java.lang.Enum) -> a
    boolean isThrowIfNull() -> n
    void setThrowIfNull(boolean) -> f
    boolean isPersisted() -> o
    void setPersisted(boolean) -> g
    java.lang.String getFormat() -> p
    void setFormat(java.lang.String) -> e
    boolean isUnique() -> q
    void setUnique(boolean) -> h
    boolean isUniqueCombo() -> r
    void setUniqueCombo(boolean) -> i
    void setIndex(boolean) -> j
    java.lang.String getIndexName(java.lang.String) -> f
    void setIndexName(java.lang.String) -> g
    void setUniqueIndex(boolean) -> k
    java.lang.String getUniqueIndexName(java.lang.String) -> h
    void setUniqueIndexName(java.lang.String) -> i
    void setForeignAutoRefresh(boolean) -> l
    boolean isForeignAutoRefresh() -> s
    int getMaxForeignAutoRefreshLevel() -> t
    void setMaxForeignAutoRefreshLevel(int) -> b
    boolean isForeignCollection() -> u
    void setForeignCollection(boolean) -> m
    boolean isForeignCollectionEager() -> v
    void setForeignCollectionEager(boolean) -> n
    int getForeignCollectionMaxEagerLevel() -> w
    void setForeignCollectionColumnName(java.lang.String) -> j
    java.lang.String getForeignCollectionOrderColumnName() -> x
    java.lang.String getForeignCollectionForeignFieldName() -> y
    java.lang.Class getPersisterClass() -> z
    void setPersisterClass(java.lang.Class) -> a
    boolean isAllowGeneratedIdInsert() -> A
    void setAllowGeneratedIdInsert(boolean) -> o
    java.lang.String getColumnDefinition() -> B
    void setColumnDefinition(java.lang.String) -> k
    boolean isForeignAutoCreate() -> C
    void setForeignAutoCreate(boolean) -> p
    boolean isVersion() -> D
    void setVersion(boolean) -> q
    java.lang.String getForeignColumnName() -> E
    void setForeignColumnName(java.lang.String) -> l
    com.j256.ormlite.field.DatabaseFieldConfig fromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> a
    java.lang.reflect.Method findGetMethod(java.lang.reflect.Field,boolean) -> a
    java.lang.reflect.Method findSetMethod(java.lang.reflect.Field,boolean) -> b
    com.j256.ormlite.field.DatabaseFieldConfig fromDatabaseField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field,com.j256.ormlite.field.DatabaseField) -> a
    void postProcess() -> F
    java.lang.Enum findMatchingEnumVal(java.lang.reflect.Field,java.lang.String) -> a
    com.j256.ormlite.field.DatabaseFieldConfig fromForeignCollection(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field,com.j256.ormlite.field.ForeignCollectionField) -> a
    java.lang.String findIndexName(java.lang.String) -> m
    java.lang.String valueIfNotBlank(java.lang.String) -> n
    java.lang.String methodFromField(java.lang.reflect.Field,java.lang.String) -> b
com.j256.ormlite.field.FieldConverter -> com.a.a.d.g:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> b
    com.j256.ormlite.field.SqlType getSqlType() -> a
    boolean isStreamType() -> b
com.j256.ormlite.field.FieldType -> com.a.a.d.h:
    boolean DEFAULT_VALUE_BOOLEAN -> a
    byte DEFAULT_VALUE_BYTE -> b
    char DEFAULT_VALUE_CHAR -> c
    short DEFAULT_VALUE_SHORT -> d
    int DEFAULT_VALUE_INT -> e
    long DEFAULT_VALUE_LONG -> f
    float DEFAULT_VALUE_FLOAT -> g
    double DEFAULT_VALUE_DOUBLE -> h
    com.j256.ormlite.support.ConnectionSource connectionSource -> i
    java.lang.String tableName -> j
    java.lang.reflect.Field field -> k
    java.lang.String columnName -> l
    com.j256.ormlite.field.DatabaseFieldConfig fieldConfig -> m
    boolean isId -> n
    boolean isGeneratedId -> o
    java.lang.String generatedIdSequence -> p
    java.lang.reflect.Method fieldGetMethod -> q
    java.lang.reflect.Method fieldSetMethod -> r
    com.j256.ormlite.field.DataPersister dataPersister -> s
    java.lang.Object defaultValue -> t
    java.lang.Object dataTypeConfigObj -> u
    com.j256.ormlite.field.FieldConverter fieldConverter -> v
    com.j256.ormlite.field.FieldType foreignIdField -> w
    java.lang.reflect.Constructor foreignConstructor -> x
    com.j256.ormlite.field.FieldType foreignFieldType -> y
    com.j256.ormlite.dao.Dao foreignDao -> z
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> A
    java.lang.ThreadLocal threadLevelCounters -> B
    void configDaoInformation(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    java.lang.reflect.Field getField() -> a
    java.lang.String getFieldName() -> b
    java.lang.Class getType() -> c
    java.lang.String getColumnName() -> d
    com.j256.ormlite.field.DataPersister getDataPersister() -> e
    java.lang.Object getDataTypeConfigObj() -> f
    com.j256.ormlite.field.SqlType getSqlType() -> g
    java.lang.Object getDefaultValue() -> h
    int getWidth() -> i
    boolean isCanBeNull() -> j
    boolean isId() -> k
    boolean isGeneratedId() -> l
    boolean isGeneratedIdSequence() -> m
    java.lang.String getGeneratedIdSequence() -> n
    boolean isForeign() -> o
    void assignField(java.lang.Object,java.lang.Object,boolean,com.j256.ormlite.dao.ObjectCache) -> a
    java.lang.Object assignIdValue(java.lang.Object,java.lang.Number,com.j256.ormlite.dao.ObjectCache) -> a
    java.lang.Object extractRawJavaFieldValue(java.lang.Object) -> a
    java.lang.Object extractJavaFieldValue(java.lang.Object) -> b
    java.lang.Object extractJavaFieldToSqlArgValue(java.lang.Object) -> c
    java.lang.Object convertJavaFieldToSqlArgValue(java.lang.Object) -> d
    java.lang.Object moveToNextValue(java.lang.Object) -> e
    com.j256.ormlite.field.FieldType getForeignIdField() -> p
    boolean isEscapedValue() -> q
    java.lang.Enum getUnknownEnumVal() -> r
    java.lang.String getFormat() -> s
    boolean isUnique() -> t
    boolean isUniqueCombo() -> u
    java.lang.String getIndexName() -> v
    java.lang.String getUniqueIndexName() -> w
    boolean isEscapedDefaultValue() -> x
    boolean isComparable() -> y
    boolean isArgumentHolderRequired() -> z
    boolean isForeignCollection() -> A
    com.j256.ormlite.dao.BaseForeignCollection buildForeignCollection(java.lang.Object,java.lang.Object,boolean) -> a
    java.lang.Object resultToJava(com.j256.ormlite.support.DatabaseResults,java.util.Map) -> a
    boolean isSelfGeneratedId() -> B
    boolean isAllowGeneratedIdInsert() -> C
    java.lang.String getColumnDefinition() -> D
    boolean isForeignAutoCreate() -> E
    boolean isVersion() -> F
    java.lang.Object generateId() -> G
    java.lang.Object getFieldValueIfNotDefault(java.lang.Object) -> f
    boolean isObjectsFieldValueDefault(java.lang.Object) -> g
    java.lang.Object getJavaDefaultValueDefault() -> H
    int createWithForeignDao(java.lang.Object) -> h
    com.j256.ormlite.field.FieldType createFieldType(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.reflect.Field,java.lang.Class) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isFieldValueDefault(java.lang.Object) -> i
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class,java.lang.Class,com.j256.ormlite.dao.BaseDaoImpl) -> a
    void assignDataType(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.DataPersister) -> a
com.j256.ormlite.field.FieldType$1 -> com.a.a.d.i:
    com.j256.ormlite.field.FieldType$LevelCounters initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.FieldType$LevelCounters -> com.a.a.d.j:
    int autoRefreshLevel -> a
    int autoRefreshLevelMax -> b
    int foreignCollectionLevel -> c
    int foreignCollectionLevelMax -> d
com.j256.ormlite.field.ForeignCollectionField -> com.a.a.d.k:
    boolean eager() -> a
    int maxEagerForeignCollectionLevel() -> b
    int maxEagerLevel() -> c
    java.lang.String columnName() -> d
    java.lang.String orderColumnName() -> e
    java.lang.String foreignColumnName() -> f
    java.lang.String foreignFieldName() -> g
com.j256.ormlite.field.SqlType -> com.a.a.d.l:
    com.j256.ormlite.field.SqlType STRING -> a
    com.j256.ormlite.field.SqlType LONG_STRING -> b
    com.j256.ormlite.field.SqlType DATE -> c
    com.j256.ormlite.field.SqlType BOOLEAN -> d
    com.j256.ormlite.field.SqlType CHAR -> e
    com.j256.ormlite.field.SqlType BYTE -> f
    com.j256.ormlite.field.SqlType BYTE_ARRAY -> g
    com.j256.ormlite.field.SqlType SHORT -> h
    com.j256.ormlite.field.SqlType INTEGER -> i
    com.j256.ormlite.field.SqlType LONG -> j
    com.j256.ormlite.field.SqlType FLOAT -> k
    com.j256.ormlite.field.SqlType DOUBLE -> l
    com.j256.ormlite.field.SqlType SERIALIZABLE -> m
    com.j256.ormlite.field.SqlType BLOB -> n
    com.j256.ormlite.field.SqlType BIG_DECIMAL -> o
    com.j256.ormlite.field.SqlType UNKNOWN -> p
    com.j256.ormlite.field.SqlType[] $VALUES -> q
    com.j256.ormlite.field.SqlType[] values() -> values
    com.j256.ormlite.field.SqlType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.types.BaseDataType -> com.a.a.d.a.a:
    com.j256.ormlite.field.SqlType sqlType -> a
    java.lang.Class[] classes -> b
    boolean isValidForField(java.lang.reflect.Field) -> a
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
    com.j256.ormlite.field.SqlType getSqlType() -> a
    java.lang.Class[] getAssociatedClasses() -> c
    java.lang.String[] getAssociatedClassNames() -> d
    java.lang.Object convertIdNumber(java.lang.Number) -> a
    boolean isValidGeneratedType() -> e
    boolean isEscapedDefaultValue() -> f
    boolean isEscapedValue() -> g
    boolean isPrimitive() -> h
    boolean isComparable() -> i
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
    boolean isSelfGeneratedId() -> l
    java.lang.Object generateId() -> m
    int getDefaultWidth() -> n
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.types.BaseDateType -> com.a.a.d.a.b:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig convertDateStringConfig(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig) -> a
    java.util.Date parseDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> a
    java.lang.String normalizeDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> b
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig -> com.a.a.d.a.c:
    java.lang.ThreadLocal threadLocal -> b
    java.lang.String dateFormatStr -> a
    java.text.DateFormat getDateFormat() -> a
    java.lang.String toString() -> toString
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1 -> com.a.a.d.a.d:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig this$0 -> a
    java.text.DateFormat initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.types.BaseEnumType -> com.a.a.d.a.e:
    java.lang.Enum enumVal(com.j256.ormlite.field.FieldType,java.lang.Object,java.lang.Enum,java.lang.Enum) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.types.BigDecimalNumericType -> com.a.a.d.a.f:
    com.j256.ormlite.field.types.BigDecimalNumericType singleTon -> a
    com.j256.ormlite.field.types.BigDecimalNumericType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isAppropriateId() -> j
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.BigDecimalStringType -> com.a.a.d.a.g:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.BigDecimalStringType singleTon -> b
    com.j256.ormlite.field.types.BigDecimalStringType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    int getDefaultWidth() -> n
    boolean isAppropriateId() -> j
com.j256.ormlite.field.types.BigIntegerType -> com.a.a.d.a.h:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.BigIntegerType singleTon -> b
    com.j256.ormlite.field.types.BigIntegerType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    int getDefaultWidth() -> n
    boolean isAppropriateId() -> j
com.j256.ormlite.field.types.BooleanObjectType -> com.a.a.d.a.i:
    com.j256.ormlite.field.types.BooleanObjectType singleTon -> a
    com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isEscapedValue() -> g
    boolean isAppropriateId() -> j
com.j256.ormlite.field.types.BooleanType -> com.a.a.d.a.j:
    com.j256.ormlite.field.types.BooleanType singleTon -> a
    com.j256.ormlite.field.types.BooleanType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.ByteArrayType -> com.a.a.d.a.k:
    com.j256.ormlite.field.types.ByteArrayType singleTon -> a
    com.j256.ormlite.field.types.ByteArrayType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
com.j256.ormlite.field.types.ByteObjectType -> com.a.a.d.a.l:
    com.j256.ormlite.field.types.ByteObjectType singleTon -> a
    com.j256.ormlite.field.types.ByteObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.ByteType -> com.a.a.d.a.m:
    com.j256.ormlite.field.types.ByteType singleTon -> a
    com.j256.ormlite.field.types.ByteType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.CharType -> com.a.a.d.a.n:
    com.j256.ormlite.field.types.CharType singleTon -> a
    com.j256.ormlite.field.types.CharType getSingleton() -> p
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.CharacterObjectType -> com.a.a.d.a.o:
    com.j256.ormlite.field.types.CharacterObjectType singleTon -> a
    com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> q
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
com.j256.ormlite.field.types.DateLongType -> com.a.a.d.a.p:
    com.j256.ormlite.field.types.DateLongType singleTon -> a
    com.j256.ormlite.field.types.DateLongType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.DateStringType -> com.a.a.d.a.q:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> b
    com.j256.ormlite.field.types.DateStringType singleTon -> c
    com.j256.ormlite.field.types.DateStringType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.DateTimeType -> com.a.a.d.a.r:
    com.j256.ormlite.field.types.DateTimeType singleTon -> a
    java.lang.Class dateTimeClass -> b
    java.lang.reflect.Method getMillisMethod -> c
    java.lang.reflect.Constructor millisConstructor -> d
    java.lang.String[] associatedClassNames -> e
    com.j256.ormlite.field.types.DateTimeType getSingleton() -> p
    java.lang.String[] getAssociatedClassNames() -> d
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    boolean isEscapedValue() -> g
    boolean isAppropriateId() -> j
    java.lang.reflect.Method getMillisMethod() -> q
    java.lang.reflect.Constructor getConstructor() -> r
    java.lang.Class getDateTimeClass() -> s
com.j256.ormlite.field.types.DateType -> com.a.a.d.a.s:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> a
    com.j256.ormlite.field.types.DateType singleTon -> b
    com.j256.ormlite.field.types.DateType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isArgumentHolderRequired() -> k
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> q
com.j256.ormlite.field.types.DoubleObjectType -> com.a.a.d.a.t:
    com.j256.ormlite.field.types.DoubleObjectType singleTon -> a
    com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.DoubleType -> com.a.a.d.a.u:
    com.j256.ormlite.field.types.DoubleType singleTon -> a
    com.j256.ormlite.field.types.DoubleType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.EnumIntegerType -> com.a.a.d.a.v:
    com.j256.ormlite.field.types.EnumIntegerType singleTon -> a
    com.j256.ormlite.field.types.EnumIntegerType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isEscapedValue() -> g
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
com.j256.ormlite.field.types.EnumStringType -> com.a.a.d.a.w:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.EnumStringType singleTon -> b
    com.j256.ormlite.field.types.EnumStringType getSingleton() -> p
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.FloatObjectType -> com.a.a.d.a.x:
    com.j256.ormlite.field.types.FloatObjectType singleTon -> a
    com.j256.ormlite.field.types.FloatObjectType getSingleton() -> p
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.FloatType -> com.a.a.d.a.y:
    com.j256.ormlite.field.types.FloatType singleTon -> a
    com.j256.ormlite.field.types.FloatType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.IntType -> com.a.a.d.a.z:
    com.j256.ormlite.field.types.IntType singleTon -> a
    com.j256.ormlite.field.types.IntType getSingleton() -> p
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.IntegerObjectType -> com.a.a.d.a.aa:
    com.j256.ormlite.field.types.IntegerObjectType singleTon -> a
    com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> q
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object convertIdNumber(java.lang.Number) -> a
    boolean isEscapedValue() -> g
    boolean isValidGeneratedType() -> e
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.types.LongObjectType -> com.a.a.d.a.ab:
    com.j256.ormlite.field.types.LongObjectType singleTon -> a
    com.j256.ormlite.field.types.LongObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object convertIdNumber(java.lang.Number) -> a
    boolean isEscapedValue() -> g
    boolean isValidGeneratedType() -> e
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.types.LongStringType -> com.a.a.d.a.ac:
    com.j256.ormlite.field.types.LongStringType singleTon -> b
    com.j256.ormlite.field.types.LongStringType getSingleton() -> p
    boolean isAppropriateId() -> j
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.LongType -> com.a.a.d.a.ad:
    com.j256.ormlite.field.types.LongType singleTon -> a
    com.j256.ormlite.field.types.LongType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.SerializableType -> com.a.a.d.a.ae:
    com.j256.ormlite.field.types.SerializableType singleTon -> a
    com.j256.ormlite.field.types.SerializableType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
    boolean isStreamType() -> b
    boolean isComparable() -> i
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
com.j256.ormlite.field.types.ShortObjectType -> com.a.a.d.a.af:
    com.j256.ormlite.field.types.ShortObjectType singleTon -> a
    com.j256.ormlite.field.types.ShortObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isEscapedValue() -> g
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.types.ShortType -> com.a.a.d.a.ag:
    com.j256.ormlite.field.types.ShortType singleTon -> a
    com.j256.ormlite.field.types.ShortType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.SqlDateType -> com.a.a.d.a.ah:
    com.j256.ormlite.field.types.SqlDateType singleTon -> a
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig sqlDateFormatConfig -> b
    com.j256.ormlite.field.types.SqlDateType getSingleton() -> r
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> q
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.types.StringBytesType -> com.a.a.d.a.ai:
    com.j256.ormlite.field.types.StringBytesType singleTon -> a
    com.j256.ormlite.field.types.StringBytesType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
    java.lang.String getCharsetName(com.j256.ormlite.field.FieldType) -> b
com.j256.ormlite.field.types.StringType -> com.a.a.d.a.aj:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.StringType singleTon -> b
    com.j256.ormlite.field.types.StringType getSingleton() -> q
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.TimeStampType -> com.a.a.d.a.ak:
    com.j256.ormlite.field.types.TimeStampType singleTon -> a
    com.j256.ormlite.field.types.TimeStampType getSingleton() -> r
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.types.UuidType -> com.a.a.d.a.al:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.UuidType singleTon -> b
    com.j256.ormlite.field.types.UuidType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isValidGeneratedType() -> e
    boolean isSelfGeneratedId() -> l
    java.lang.Object generateId() -> m
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.VoidType -> com.a.a.d.a.am:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.logger.LocalLog -> com.a.a.e.a:
    com.j256.ormlite.logger.Log$Level DEFAULT_LEVEL -> a
    java.lang.ThreadLocal dateFormatThreadLocal -> b
    java.io.PrintStream printStream -> c
    java.util.List classLevels -> d
    java.lang.String className -> e
    com.j256.ormlite.logger.Log$Level level -> f
    void openLogFile(java.lang.String) -> a
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> a
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> a
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> a
    java.util.List configureClassLevels(java.io.InputStream) -> a
    void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> b
com.j256.ormlite.logger.LocalLog$1 -> com.a.a.e.b:
    java.text.DateFormat initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.logger.LocalLog$PatternLevel -> com.a.a.e.c:
    java.util.regex.Pattern pattern -> a
    com.j256.ormlite.logger.Log$Level level -> b
com.j256.ormlite.logger.Log -> com.a.a.e.d:
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> a
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> a
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> a
com.j256.ormlite.logger.Log$Level -> com.a.a.e.e:
    com.j256.ormlite.logger.Log$Level TRACE -> a
    com.j256.ormlite.logger.Log$Level DEBUG -> b
    com.j256.ormlite.logger.Log$Level INFO -> c
    com.j256.ormlite.logger.Log$Level WARNING -> d
    com.j256.ormlite.logger.Log$Level ERROR -> e
    com.j256.ormlite.logger.Log$Level FATAL -> f
    int level -> g
    com.j256.ormlite.logger.Log$Level[] $VALUES -> h
    com.j256.ormlite.logger.Log$Level[] values() -> values
    com.j256.ormlite.logger.Log$Level valueOf(java.lang.String) -> valueOf
    boolean isEnabled(com.j256.ormlite.logger.Log$Level) -> a
com.j256.ormlite.logger.Logger -> com.a.a.e.f:
    int ARG_STRING_LENGTH -> a
    java.lang.Object UNKNOWN_ARG -> b
    com.j256.ormlite.logger.Log log -> c
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> a
    void trace(java.lang.String,java.lang.Object) -> a
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    void trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void debug(java.lang.String,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object[]) -> a
    void info(java.lang.String,java.lang.Object) -> c
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> c
    void info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> c
    void warn(java.lang.Throwable,java.lang.String) -> a
    void error(java.lang.String) -> a
    void error(java.lang.String,java.lang.Object) -> d
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> d
    void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> d
    void error(java.lang.String,java.lang.Object[]) -> b
    void error(java.lang.Throwable,java.lang.String,java.lang.Object) -> a
    void innerLog(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> a
    java.lang.String buildFullMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> a
    void appendArg(java.lang.StringBuilder,java.lang.Object) -> a
com.j256.ormlite.logger.LoggerFactory -> com.a.a.e.g:
    com.j256.ormlite.logger.LoggerFactory$LogType logType -> a
    com.j256.ormlite.logger.Logger getLogger(java.lang.Class) -> a
    com.j256.ormlite.logger.Logger getLogger(java.lang.String) -> a
    java.lang.String getSimpleClassName(java.lang.String) -> b
    com.j256.ormlite.logger.LoggerFactory$LogType findLogType() -> a
com.j256.ormlite.logger.LoggerFactory$1 -> com.a.a.e.h:
com.j256.ormlite.logger.LoggerFactory$LogType -> com.a.a.e.i:
    com.j256.ormlite.logger.LoggerFactory$LogType ANDROID -> a
    com.j256.ormlite.logger.LoggerFactory$LogType COMMONS_LOGGING -> b
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J -> c
    com.j256.ormlite.logger.LoggerFactory$LogType LOCAL -> d
    java.lang.String detectClassName -> e
    java.lang.String logClassName -> f
    com.j256.ormlite.logger.LoggerFactory$LogType[] $VALUES -> g
    com.j256.ormlite.logger.LoggerFactory$LogType[] values() -> values
    com.j256.ormlite.logger.LoggerFactory$LogType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> a
    com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String) -> b
    boolean isAvailable() -> a
    boolean isAvailableTestClass() -> b
com.j256.ormlite.logger.LoggerFactory$LogType$1 -> com.a.a.e.j:
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> a
    boolean isAvailable() -> a
com.j256.ormlite.misc.BaseDaoEnabled -> com.a.a.f.a:
    com.j256.ormlite.dao.Dao dao -> a
    void setDao(com.j256.ormlite.dao.Dao) -> a
com.j256.ormlite.misc.JavaxPersistence -> com.a.a.f.b:
    com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field) -> a
    java.lang.String getEntityName(java.lang.Class) -> a
com.j256.ormlite.misc.SqlExceptionUtil -> com.a.a.f.c:
    java.sql.SQLException create(java.lang.String,java.lang.Throwable) -> a
com.j256.ormlite.misc.VersionUtils -> com.a.a.f.d:
    com.j256.ormlite.logger.Logger logger -> a
    void checkCoreVersusAndroidVersions() -> a
    void logVersionErrors(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String readCoreVersion() -> b
    java.lang.String readAndroidVersion() -> c
    java.lang.String getVersionFromFile(java.lang.String) -> a
    com.j256.ormlite.logger.Logger getLogger() -> d
com.j256.ormlite.stmt.ArgumentHolder -> com.a.a.g.a:
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> a
    void setValue(java.lang.Object) -> a
    java.lang.Object getSqlArgValue() -> a
    com.j256.ormlite.field.SqlType getSqlType() -> b
    com.j256.ormlite.field.FieldType getFieldType() -> c
com.j256.ormlite.stmt.BaseArgumentHolder -> com.a.a.g.b:
    java.lang.String columnName -> a
    com.j256.ormlite.field.FieldType fieldType -> b
    com.j256.ormlite.field.SqlType sqlType -> c
    java.lang.Object getValue() -> d
    boolean isValueSet() -> e
    void setMetaInfo(java.lang.String) -> a
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> a
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> a
    java.lang.Object getSqlArgValue() -> a
    com.j256.ormlite.field.FieldType getFieldType() -> c
    com.j256.ormlite.field.SqlType getSqlType() -> b
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.GenericRowMapper -> com.a.a.g.c:
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> a
com.j256.ormlite.stmt.PreparedDelete -> com.a.a.g.d:
com.j256.ormlite.stmt.PreparedQuery -> com.a.a.g.e:
com.j256.ormlite.stmt.PreparedStmt -> com.a.a.g.f:
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> a
    java.lang.String getStatement() -> a
com.j256.ormlite.stmt.PreparedUpdate -> com.a.a.g.g:
com.j256.ormlite.stmt.QueryBuilder -> com.a.a.g.h:
    com.j256.ormlite.field.FieldType idField -> e
    com.j256.ormlite.field.FieldType[] resultFieldTypes -> f
    boolean distinct -> g
    boolean selectIdColumn -> h
    java.util.List selectColumnList -> i
    java.util.List selectRawList -> j
    java.util.List orderByList -> k
    java.lang.String orderByRaw -> l
    java.util.List groupByList -> m
    java.lang.String groupByRaw -> n
    boolean isInnerQuery -> o
    boolean countOf -> p
    java.lang.String having -> q
    java.lang.Long limit -> r
    java.lang.Long offset -> s
    com.j256.ormlite.stmt.PreparedQuery prepare() -> a
    com.j256.ormlite.stmt.QueryBuilder orderBy(java.lang.String,boolean) -> a
    java.util.List query() -> b
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> a
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> c
    void appendStatementEnd(java.lang.StringBuilder) -> a
    void appendRawColumns(java.lang.StringBuilder) -> b
    void appendColumns(java.lang.StringBuilder) -> c
    void appendFieldColumnName(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> a
    void appendLimit(java.lang.StringBuilder) -> d
    void appendOffset(java.lang.StringBuilder) -> e
    void appendGroupBys(java.lang.StringBuilder) -> f
    void appendOrderBys(java.lang.StringBuilder) -> g
    void appendHaving(java.lang.StringBuilder) -> h
com.j256.ormlite.stmt.SelectArg -> com.a.a.g.i:
    boolean hasBeenSet -> a
    java.lang.Object value -> b
    java.lang.Object getValue() -> d
    void setValue(java.lang.Object) -> a
    boolean isValueSet() -> e
com.j256.ormlite.stmt.SelectIterator -> com.a.a.g.j:
    com.j256.ormlite.logger.Logger logger -> a
    java.lang.Class dataClass -> b
    com.j256.ormlite.dao.Dao classDao -> c
    com.j256.ormlite.support.ConnectionSource connectionSource -> d
    com.j256.ormlite.support.DatabaseConnection connection -> e
    com.j256.ormlite.support.CompiledStatement compiledStmt -> f
    com.j256.ormlite.support.DatabaseResults results -> g
    com.j256.ormlite.stmt.GenericRowMapper rowMapper -> h
    java.lang.String statement -> i
    boolean first -> j
    boolean closed -> k
    boolean alreadyMoved -> l
    java.lang.Object last -> m
    int rowC -> n
    boolean hasNextThrow() -> c
    boolean hasNext() -> hasNext
    java.lang.Object nextThrow() -> d
    java.lang.Object next() -> next
    void removeThrow() -> e
    void remove() -> remove
    void close() -> a
    void moveToNext() -> b
    void closeNoThrow() -> f
    java.lang.Object getCurrent() -> g
com.j256.ormlite.stmt.StatementBuilder -> com.a.a.g.k:
    com.j256.ormlite.logger.Logger logger -> e
    com.j256.ormlite.table.TableInfo tableInfo -> a
    com.j256.ormlite.db.DatabaseType databaseType -> b
    com.j256.ormlite.dao.Dao dao -> c
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> d
    com.j256.ormlite.stmt.Where where -> f
    com.j256.ormlite.stmt.Where where() -> d
    com.j256.ormlite.stmt.mapped.MappedPreparedStmt prepareStatement(java.lang.Long) -> a
    java.lang.String buildStatementString(java.util.List) -> a
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> b
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> a
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> c
    void appendStatementEnd(java.lang.StringBuilder) -> a
    com.j256.ormlite.field.FieldType verifyColumnName(java.lang.String) -> a
com.j256.ormlite.stmt.StatementBuilder$StatementType -> com.a.a.g.l:
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT -> a
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_LONG -> b
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_RAW -> c
    com.j256.ormlite.stmt.StatementBuilder$StatementType UPDATE -> d
    com.j256.ormlite.stmt.StatementBuilder$StatementType DELETE -> e
    com.j256.ormlite.stmt.StatementBuilder$StatementType EXECUTE -> f
    boolean okForStatementBuilder -> g
    boolean okForQuery -> h
    boolean okForUpdate -> i
    boolean okForExecute -> j
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] $VALUES -> k
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$StatementType valueOf(java.lang.String) -> valueOf
    boolean isOkForStatementBuilder() -> a
    boolean isOkForQuery() -> b
    boolean isOkForExecute() -> c
com.j256.ormlite.stmt.StatementExecutor -> com.a.a.g.m:
    com.j256.ormlite.logger.Logger logger -> a
    com.j256.ormlite.field.FieldType[] noFieldTypes -> b
    com.j256.ormlite.db.DatabaseType databaseType -> c
    com.j256.ormlite.table.TableInfo tableInfo -> d
    com.j256.ormlite.dao.Dao dao -> e
    com.j256.ormlite.stmt.PreparedQuery preparedQueryForAll -> f
    com.j256.ormlite.stmt.mapped.MappedCreate mappedInsert -> g
    com.j256.ormlite.stmt.mapped.MappedDelete mappedDelete -> h
    java.util.List query(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> a
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,int,com.j256.ormlite.dao.ObjectCache) -> a
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache,int) -> a
    int create(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> b
    java.lang.String[] mapRow(com.j256.ormlite.support.DatabaseResults) -> b
    void prepareQueryForAll() -> a
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> a
com.j256.ormlite.stmt.Where -> com.a.a.g.n:
    com.j256.ormlite.table.TableInfo tableInfo -> a
    com.j256.ormlite.stmt.StatementBuilder statementBuilder -> b
    com.j256.ormlite.field.FieldType idFieldType -> c
    java.lang.String idColumnName -> d
    com.j256.ormlite.db.DatabaseType databaseType -> e
    com.j256.ormlite.stmt.query.Clause[] clauseStack -> f
    int clauseStackLevel -> g
    com.j256.ormlite.stmt.query.NeedsFutureClause needsFuture -> h
    com.j256.ormlite.stmt.Where and(int) -> a
    com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object) -> a
    com.j256.ormlite.stmt.PreparedQuery prepare() -> a
    void appendSql(java.lang.StringBuilder,java.util.List) -> a
    java.lang.String toString() -> toString
    void addClause(com.j256.ormlite.stmt.query.Clause) -> a
    com.j256.ormlite.field.FieldType findColumnFieldType(java.lang.String) -> a
    void push(com.j256.ormlite.stmt.query.Clause) -> b
    com.j256.ormlite.stmt.query.Clause pop(java.lang.String) -> b
    com.j256.ormlite.stmt.query.Clause peek() -> b
com.j256.ormlite.stmt.mapped.BaseMappedQuery -> com.a.a.g.a.a:
    com.j256.ormlite.field.FieldType[] resultsFieldTypes -> a
    java.util.Map columnPositions -> h
    java.lang.Object parent -> i
    java.lang.Object parentId -> j
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> a
    void setParentInformation(java.lang.Object,java.lang.Object) -> a
com.j256.ormlite.stmt.mapped.BaseMappedStatement -> com.a.a.g.a.b:
    com.j256.ormlite.logger.Logger logger -> b
    com.j256.ormlite.table.TableInfo tableInfo -> c
    java.lang.Class clazz -> d
    com.j256.ormlite.field.FieldType idField -> e
    java.lang.String statement -> f
    com.j256.ormlite.field.FieldType[] argFieldTypes -> g
    java.lang.Object[] getFieldObjects(java.lang.Object) -> a
    java.lang.Object convertIdToFieldObject(java.lang.Object) -> b
    void appendWhereFieldEq(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List) -> a
    void appendTableName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    void appendFieldColumnName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> a
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.mapped.MappedCreate -> com.a.a.g.a.c:
    java.lang.String queryNextSequenceStmt -> a
    java.lang.String dataClassName -> h
    int versionFieldTypeIndex -> i
    int insert(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
    com.j256.ormlite.stmt.mapped.MappedCreate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> a
    boolean foreignCollectionsAreAssigned(com.j256.ormlite.field.FieldType[],java.lang.Object) -> a
    boolean isFieldCreatable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> a
    java.lang.String buildQueryNextSequence(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> b
    void assignSequenceId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
    void assignIdValue(java.lang.Object,java.lang.Number,java.lang.String,com.j256.ormlite.dao.ObjectCache) -> a
com.j256.ormlite.stmt.mapped.MappedCreate$1 -> com.a.a.g.a.d:
com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder -> com.a.a.g.a.e:
    java.lang.Number key -> a
    java.lang.Number getKey() -> a
    void addKey(java.lang.Number) -> a
com.j256.ormlite.stmt.mapped.MappedDelete -> com.a.a.g.a.f:
    com.j256.ormlite.stmt.mapped.MappedDelete build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> a
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
com.j256.ormlite.stmt.mapped.MappedPreparedStmt -> com.a.a.g.a.g:
    com.j256.ormlite.stmt.ArgumentHolder[] argHolders -> h
    java.lang.Long limit -> i
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> j
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> a
    java.lang.String getStatement() -> a
    com.j256.ormlite.support.CompiledStatement compileStatement(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.support.CompiledStatement) -> a
com.j256.ormlite.stmt.mapped.MappedQueryForId -> com.a.a.g.a.h:
    java.lang.String label -> h
    java.lang.Object execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
    com.j256.ormlite.stmt.mapped.MappedQueryForId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> a
    java.lang.String buildStatement(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> b
    void logArgs(java.lang.Object[]) -> a
com.j256.ormlite.stmt.query.BaseComparison -> com.a.a.g.b.a:
    java.lang.String columnName -> a
    com.j256.ormlite.field.FieldType fieldType -> b
    java.lang.Object value -> c
    void appendOperation(java.lang.StringBuilder) -> a
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> a
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> b
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Clause -> com.a.a.g.b.b:
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> a
com.j256.ormlite.stmt.query.Comparison -> com.a.a.g.b.c:
com.j256.ormlite.stmt.query.ManyClause -> com.a.a.g.b.d:
    com.j256.ormlite.stmt.query.Clause first -> a
    com.j256.ormlite.stmt.query.Clause second -> b
    com.j256.ormlite.stmt.query.Clause[] others -> c
    int startOthersAt -> d
    java.lang.String operation -> e
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> a
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> a
com.j256.ormlite.stmt.query.NeedsFutureClause -> com.a.a.g.b.e:
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> a
com.j256.ormlite.stmt.query.OrderBy -> com.a.a.g.b.f:
    java.lang.String columnName -> a
    boolean ascending -> b
    java.lang.String getColumnName() -> a
    boolean isAscending() -> b
com.j256.ormlite.stmt.query.SimpleComparison -> com.a.a.g.b.g:
    java.lang.String operation -> c
    void appendOperation(java.lang.StringBuilder) -> a
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> b
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> a
com.j256.ormlite.support.BaseConnectionSource -> com.a.a.h.a:
    java.lang.ThreadLocal specialConnection -> a
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> e
    com.j256.ormlite.support.DatabaseConnection getSavedConnection() -> f
    boolean saveSpecial(com.j256.ormlite.support.DatabaseConnection) -> d
    boolean clearSpecial(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.logger.Logger) -> a
com.j256.ormlite.support.BaseConnectionSource$NestedConnection -> com.a.a.h.b:
    com.j256.ormlite.support.DatabaseConnection connection -> a
    int nestedC -> b
    void increment() -> a
    int decrementAndGet() -> b
com.j256.ormlite.support.CompiledStatement -> com.a.a.h.c:
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> a
    int runExecute() -> a
    void close() -> b
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> a
    void setMaxRows(int) -> a
com.j256.ormlite.support.ConnectionSource -> com.a.a.h.d:
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> a
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> b
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> a
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> b
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> c
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> e
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> d
com.j256.ormlite.support.DatabaseConnection -> com.a.a.h.e:
    java.lang.Object MORE_THAN_ONE -> a
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[]) -> a
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> a
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> a
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> a
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> a
    long queryForLong(java.lang.String) -> a
com.j256.ormlite.support.DatabaseResults -> com.a.a.h.f:
    int getColumnCount() -> a
    boolean first() -> b
    boolean next() -> c
    int findColumn(java.lang.String) -> a
    java.lang.String getString(int) -> a
    boolean getBoolean(int) -> b
    char getChar(int) -> c
    byte getByte(int) -> d
    byte[] getBytes(int) -> e
    short getShort(int) -> f
    int getInt(int) -> g
    long getLong(int) -> h
    float getFloat(int) -> i
    double getDouble(int) -> j
    java.sql.Timestamp getTimestamp(int) -> k
    java.math.BigDecimal getBigDecimal(int) -> l
    boolean wasNull(int) -> m
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> d
com.j256.ormlite.support.GeneratedKeyHolder -> com.a.a.h.g:
    void addKey(java.lang.Number) -> a
com.j256.ormlite.table.DatabaseTable -> com.a.a.i.a:
    java.lang.String tableName() -> a
    java.lang.Class daoClass() -> b
com.j256.ormlite.table.DatabaseTableConfig -> com.a.a.i.b:
    java.lang.Class dataClass -> a
    java.lang.String tableName -> b
    java.util.List fieldConfigs -> c
    com.j256.ormlite.field.FieldType[] fieldTypes -> d
    java.lang.reflect.Constructor constructor -> e
    java.lang.Class getDataClass() -> a
    java.lang.String getTableName() -> b
    void extractFieldTypes(com.j256.ormlite.support.ConnectionSource) -> a
    com.j256.ormlite.field.FieldType[] getFieldTypes(com.j256.ormlite.db.DatabaseType) -> a
    java.lang.reflect.Constructor getConstructor() -> c
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    java.lang.String extractTableName(java.lang.Class) -> a
    java.lang.reflect.Constructor findNoArgConstructor(java.lang.Class) -> b
    com.j256.ormlite.field.FieldType[] extractFieldTypes(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> a
    com.j256.ormlite.field.FieldType[] convertFieldConfigs(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.util.List) -> a
com.j256.ormlite.table.ObjectFactory -> com.a.a.i.c:
    java.lang.Object createObject() -> a
com.j256.ormlite.table.TableInfo -> com.a.a.i.d:
    com.j256.ormlite.field.FieldType[] NO_FOREIGN_COLLECTIONS -> a
    com.j256.ormlite.dao.Dao dao -> b
    java.lang.Class dataClass -> c
    java.lang.String tableName -> d
    com.j256.ormlite.field.FieldType[] fieldTypes -> e
    com.j256.ormlite.field.FieldType[] foreignCollections -> f
    com.j256.ormlite.field.FieldType idField -> g
    java.lang.reflect.Constructor constructor -> h
    boolean foreignAutoCreate -> i
    java.util.Map fieldNameMap -> j
    java.lang.Class getDataClass() -> a
    java.lang.String getTableName() -> b
    com.j256.ormlite.field.FieldType[] getFieldTypes() -> c
    com.j256.ormlite.field.FieldType getFieldTypeByColumnName(java.lang.String) -> a
    com.j256.ormlite.field.FieldType getIdField() -> d
    java.lang.reflect.Constructor getConstructor() -> e
    java.lang.Object createObject() -> f
    java.lang.Object createObject(java.lang.reflect.Constructor,com.j256.ormlite.dao.Dao) -> a
    boolean isForeignAutoCreate() -> g
    com.j256.ormlite.field.FieldType[] getForeignCollections() -> h
    void wireNewInstance(com.j256.ormlite.dao.Dao,java.lang.Object) -> a
com.j256.ormlite.table.TableUtils -> com.a.a.i.e:
    com.j256.ormlite.logger.Logger logger -> a
    com.j256.ormlite.field.FieldType[] noFieldTypes -> b
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    int dropTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> a
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> b
    int doDropTable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> a
    void addDropIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> a
    void addCreateTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,java.util.List,boolean) -> a
    void addCreateIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,boolean,boolean) -> a
    void addDropTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> b
    int doCreateTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> a
    int doStatements(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.util.Collection,boolean,boolean,boolean) -> a
    int doCreateTestQueries(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.List) -> a
com.konka.dialyroads.DPreference -> com.konka.dialyroads.a:
    android.content.SharedPreferences mPreference -> a
    boolean putStringAndCommit(java.lang.String,java.lang.String) -> a
    boolean putIntAndCommit(java.lang.String,int) -> a
    boolean putBooleanAndCommit(java.lang.String,boolean) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> b
    int getInt(java.lang.String,int) -> b
    boolean getBoolean(java.lang.String,boolean) -> b
com.konka.dialyroads.R -> com.konka.dialyroads.b:
com.konka.dialyroads.R$styleable -> com.konka.dialyroads.c:
    int[] DialogStyle -> DialogStyle
    int DialogStyle_buttonBackgroundColorFocused -> DialogStyle_buttonBackgroundColorFocused
    int DialogStyle_buttonBackgroundColorNormal -> DialogStyle_buttonBackgroundColorNormal
    int DialogStyle_buttonBackgroundColorPressed -> DialogStyle_buttonBackgroundColorPressed
    int DialogStyle_buttonSeparatorColor -> DialogStyle_buttonSeparatorColor
    int DialogStyle_buttonTextColor -> DialogStyle_buttonTextColor
    int DialogStyle_dialogBackground -> DialogStyle_dialogBackground
    int DialogStyle_messageTextColor -> DialogStyle_messageTextColor
    int DialogStyle_titleSeparatorColor -> DialogStyle_titleSeparatorColor
    int DialogStyle_titleTextColor -> DialogStyle_titleTextColor
    int[] StyledDialogs -> StyledDialogs
    int StyledDialogs_sdlDialogStyle -> StyledDialogs_sdlDialogStyle
    int StyledDialogs_sdlMessageTextStyle -> StyledDialogs_sdlMessageTextStyle
    int StyledDialogs_sdlTitleTextStyle -> StyledDialogs_sdlTitleTextStyle
com.konka.dialyroads.activity.LocalFileActivity -> com.konka.dialyroads.activity.LocalFileActivity:
    com.konka.dialyroads.dialog.MyDialog myDialog -> n
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.konka.dialyroads.activity.MainActivity -> com.konka.dialyroads.activity.MainActivity:
    android.content.Context context -> s
    com.konka.dialyroads.view.Preview preview -> t
    android.widget.TextView time_fen_textview -> u
    android.widget.ImageView video_button_icon -> v
    android.widget.ImageView camera_button_icon -> w
    android.graphics.drawable.AnimationDrawable animation_drawable -> x
    long start_click -> y
    long end_click -> z
    com.konka.dialyroads.popupWindow.MyPopupWindowUtil myPopupWindowUtil -> A
    android.widget.ImageView ctl_btn_menu -> B
    android.widget.ImageView review_icon -> C
    java.lang.String FILETYPE -> D
    java.lang.String FILEPATH -> E
    android.widget.TextView flash_auto -> F
    android.widget.TextView flash_open -> G
    android.widget.TextView flash_close -> H
    android.widget.ImageView flash_image1 -> I
    android.widget.ImageView flash_image2 -> J
    android.content.Intent backgroundWorkService -> K
    android.content.Intent accelerationService -> L
    boolean flashisopen -> M
    android.content.BroadcastReceiver receiver -> n
    com.konka.dialyroads.dialog.MyDialog myDialog -> o
    android.app.Dialog setDialog -> p
    java.lang.String phone_number -> q
    android.widget.PopupWindow mPopupWindow_crash -> r
    void onCreate(android.os.Bundle) -> onCreate
    void startserivice() -> f
    void initReceiver() -> g
    void onResume() -> onResume
    void onPause() -> onPause
    void menuClick(android.view.View) -> menuClick
    void more() -> i
    void shutter_onClick(android.view.View) -> shutter_onClick
    void onClickFlashmode(android.view.View) -> onClickFlashmode
    void openVideoFlashMenu() -> j
    void closeVideoFlashMenu(android.view.View) -> a
    void openImageFlashMenu() -> k
    void closeImageFlashMenu(android.view.View) -> b
    void defaultFlashShow() -> l
    void onDestroy() -> onDestroy
    void showVideoIcon() -> m
    void showImageIcon() -> n
    void start_animation() -> o
    void stop_animation() -> p
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void videotoCamera(android.view.View) -> videotoCamera
    void openfile(android.view.View) -> openfile
    void webfile(android.view.View) -> webfile
    void app_setting(android.view.View) -> app_setting
    void exit(android.view.View) -> exit
    void cameraToVideo(android.view.View) -> cameraToVideo
    void review_iconClick(android.view.View) -> review_iconClick
    void showPopupWindow_sos() -> h
    void cancel(android.view.View) -> cancel
    void call(android.view.View) -> call
    void sendMessage(android.view.View) -> sendMessage
    android.widget.TextView access$0(com.konka.dialyroads.activity.MainActivity) -> a
    void access$1(com.konka.dialyroads.activity.MainActivity) -> b
    void access$2(com.konka.dialyroads.activity.MainActivity) -> c
    void access$3(com.konka.dialyroads.activity.MainActivity) -> d
    void access$4(com.konka.dialyroads.activity.MainActivity) -> e
    android.widget.ImageView access$5(com.konka.dialyroads.activity.MainActivity) -> f
    com.konka.dialyroads.view.Preview access$6(com.konka.dialyroads.activity.MainActivity) -> g
    android.content.Context access$7(com.konka.dialyroads.activity.MainActivity) -> h
com.konka.dialyroads.activity.MainActivity$1 -> com.konka.dialyroads.activity.a:
    com.konka.dialyroads.activity.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.konka.dialyroads.activity.MainActivity$2 -> com.konka.dialyroads.activity.b:
    com.konka.dialyroads.activity.MainActivity this$0 -> a
    void onDismiss() -> onDismiss
com.konka.dialyroads.activity.MainActivity$3 -> com.konka.dialyroads.activity.c:
    com.konka.dialyroads.activity.MainActivity this$0 -> a
    void run() -> run
com.konka.dialyroads.activity.MainActivity$4 -> com.konka.dialyroads.activity.d:
    com.konka.dialyroads.activity.MainActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.konka.dialyroads.activity.SetDialog -> com.konka.dialyroads.activity.SetDialog:
    void onCreate(android.os.Bundle) -> onCreate
com.konka.dialyroads.activity.ShowOneImageFileActivity -> com.konka.dialyroads.activity.ShowOneImageFileActivity:
    android.widget.ImageView imageView -> a
    void onCreate(android.os.Bundle) -> onCreate
com.konka.dialyroads.activity.SplashActivity -> com.konka.dialyroads.activity.SplashActivity:
    android.content.Context context -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.content.Context access$0(com.konka.dialyroads.activity.SplashActivity) -> a
com.konka.dialyroads.activity.SplashActivity$1 -> com.konka.dialyroads.activity.e:
    com.konka.dialyroads.activity.SplashActivity this$0 -> a
    void run() -> run
com.konka.dialyroads.activity.WebFileActivity -> com.konka.dialyroads.activity.WebFileActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.konka.dialyroads.activity.WebFileGridActivity -> com.konka.dialyroads.activity.WebFileGridActivity:
    android.widget.GridView listView -> b
    com.konka.dialyroads.activity.WebFileGridActivity$ImageAdapter imageAdapter -> c
    android.content.Context context -> d
    android.widget.AdapterView$OnItemClickListener listener -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.content.Context access$0(com.konka.dialyroads.activity.WebFileGridActivity) -> a
    com.konka.dialyroads.activity.WebFileGridActivity$ImageAdapter access$1(com.konka.dialyroads.activity.WebFileGridActivity) -> b
com.konka.dialyroads.activity.WebFileGridActivity$1 -> com.konka.dialyroads.activity.f:
    com.konka.dialyroads.activity.WebFileGridActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.konka.dialyroads.activity.WebFileGridActivity$ImageAdapter -> com.konka.dialyroads.activity.g:
    com.konka.dialyroads.pojo.WebPicFileInfo webPicFileInfo -> b
    com.konka.dialyroads.activity.WebFileGridActivity this$0 -> a
    int getCount() -> getCount
    com.konka.dialyroads.pojo.WebPicFileInfo getWebPicFileInfo() -> a
    void setWebPicFileInfo(com.konka.dialyroads.pojo.WebPicFileInfo) -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.konka.dialyroads.dao.BaseDBHelper -> com.konka.dialyroads.a.a:
    android.database.sqlite.SQLiteDatabase$CursorFactory factory -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.konka.dialyroads.dao.ImageDBHelper -> com.konka.dialyroads.a.b:
    com.konka.dialyroads.dao.BaseDBHelper databaseHelper -> a
    long save(com.konka.dialyroads.pojo.ImageFileBean) -> a
    java.util.List getAll_Image() -> a
    com.konka.dialyroads.pojo.ImageFileBean getLatest() -> b
    boolean del(com.konka.dialyroads.pojo.ImageFileBean) -> b
    void saveUploadtype(com.konka.dialyroads.pojo.ImageFileBean,java.lang.Boolean) -> a
com.konka.dialyroads.dao.VideoDBHelper -> com.konka.dialyroads.a.c:
    com.konka.dialyroads.dao.BaseDBHelper databaseHelper -> a
    long save(com.konka.dialyroads.pojo.VideoFileBean) -> a
    java.util.List getAllVideoFileBean() -> a
    com.konka.dialyroads.pojo.VideoFileBean getLatest() -> b
    boolean del(com.konka.dialyroads.pojo.VideoFileBean) -> b
    void setUploadType(com.konka.dialyroads.pojo.VideoFileBean,java.lang.Boolean) -> a
    void setForeverSave(com.konka.dialyroads.pojo.VideoFileBean,java.lang.Boolean) -> b
    double getTempVideoSize() -> c
com.konka.dialyroads.dialog.JayneHatDialogFragment -> com.konka.dialyroads.b.a:
    java.lang.String TAG -> Y
    android.view.View mshowView -> Z
    void show(android.support.v4.app.FragmentActivity,android.view.View) -> a
    eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder build(eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder) -> a
    eu.inmite.android.lib.dialogs.ISimpleDialogListener access$0(com.konka.dialyroads.dialog.JayneHatDialogFragment) -> a
com.konka.dialyroads.dialog.JayneHatDialogFragment$1 -> com.konka.dialyroads.b.b:
    com.konka.dialyroads.dialog.JayneHatDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.konka.dialyroads.dialog.MyDialog -> com.konka.dialyroads.b.c:
    android.content.Context context -> b
    android.app.Dialog userDialog -> a
    void showSimpleDialog(android.content.Context,android.support.v4.app.FragmentManager) -> a
    void showCustomViewDialog(android.support.v4.app.FragmentActivity,android.view.View) -> a
    void showUserDialog() -> a
    void cancelUserDialog() -> b
com.konka.dialyroads.dialog.MyDialogListen -> com.konka.dialyroads.b.d:
    void onPositiveButtonClicked(int) -> a
    void onNegativeButtonClicked(int) -> b
com.konka.dialyroads.frament.LocalFileFragment -> com.konka.dialyroads.frament.LocalFileFragment:
    android.support.v4.app.FragmentTabHost mTabHost -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> g
com.konka.dialyroads.frament.LocalImageFragment -> com.konka.dialyroads.frament.a:
    android.widget.ListView listView -> c
    com.konka.dialyroads.frament.LocalImageFragment$ItemAdapter_image itemAdapter -> d
    android.app.ProgressDialog pd -> e
    android.content.Context context -> a
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> b
    android.app.AlertDialog alertDialog -> f
    com.konka.dialyroads.pojo.ImageFileBean imageFileBean -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init(android.view.View) -> a
    void init1() -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    com.konka.dialyroads.frament.LocalImageFragment$ItemAdapter_image access$0(com.konka.dialyroads.frament.LocalImageFragment) -> a
    android.app.ProgressDialog access$1(com.konka.dialyroads.frament.LocalImageFragment) -> b
    com.konka.dialyroads.pojo.ImageFileBean access$2(com.konka.dialyroads.frament.LocalImageFragment) -> c
com.konka.dialyroads.frament.LocalImageFragment$1 -> com.konka.dialyroads.frament.b:
    com.konka.dialyroads.frament.LocalImageFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.konka.dialyroads.frament.LocalImageFragment$2 -> com.konka.dialyroads.frament.c:
    com.konka.dialyroads.frament.LocalImageFragment this$0 -> a
    void run() -> run
    com.konka.dialyroads.frament.LocalImageFragment access$0(com.konka.dialyroads.frament.LocalImageFragment$2) -> a
com.konka.dialyroads.frament.LocalImageFragment$2$1 -> com.konka.dialyroads.frament.d:
    com.konka.dialyroads.frament.LocalImageFragment$2 this$1 -> a
    void run() -> run
com.konka.dialyroads.frament.LocalImageFragment$3 -> com.konka.dialyroads.frament.e:
    com.konka.dialyroads.frament.LocalImageFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    com.konka.dialyroads.frament.LocalImageFragment access$0(com.konka.dialyroads.frament.LocalImageFragment$3) -> a
com.konka.dialyroads.frament.LocalImageFragment$3$1 -> com.konka.dialyroads.frament.f:
    com.konka.dialyroads.frament.LocalImageFragment$3 this$1 -> a
    com.konka.dialyroads.pojo.ImageFileBean val$timageFileBean -> b
    void callbackResult(java.lang.Boolean) -> a
com.konka.dialyroads.frament.LocalImageFragment$ItemAdapter_image -> com.konka.dialyroads.frament.g:
    java.util.List lists -> b
    com.konka.dialyroads.frament.LocalImageFragment this$0 -> a
    java.util.List getLists() -> a
    void setLists(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.konka.dialyroads.frament.LocalImageFragment$ItemAdapter_image$ViewHolder -> com.konka.dialyroads.frament.h:
    android.widget.TextView text -> a
    android.widget.ImageView image -> b
    android.widget.TextView textSize -> c
    android.widget.TextView resolution_ratio -> d
    android.widget.ImageView upload -> e
    com.konka.dialyroads.frament.LocalImageFragment$ItemAdapter_image this$1 -> f
com.konka.dialyroads.frament.LocalVideoFragment -> com.konka.dialyroads.frament.i:
    android.widget.ListView listView -> c
    com.konka.dialyroads.frament.LocalVideoFragment$ItemAdapter_video itemAdapter -> d
    android.app.ProgressDialog pd -> e
    android.content.Context context -> a
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> b
    android.app.AlertDialog alertDialog -> f
    com.konka.dialyroads.pojo.VideoFileBean videoFileBean -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init(android.view.View) -> a
    void initdata() -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    com.konka.dialyroads.frament.LocalVideoFragment$ItemAdapter_video access$0(com.konka.dialyroads.frament.LocalVideoFragment) -> a
    android.app.ProgressDialog access$1(com.konka.dialyroads.frament.LocalVideoFragment) -> b
    com.konka.dialyroads.pojo.VideoFileBean access$2(com.konka.dialyroads.frament.LocalVideoFragment) -> c
com.konka.dialyroads.frament.LocalVideoFragment$1 -> com.konka.dialyroads.frament.j:
    com.konka.dialyroads.frament.LocalVideoFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.konka.dialyroads.frament.LocalVideoFragment$2 -> com.konka.dialyroads.frament.k:
    com.konka.dialyroads.frament.LocalVideoFragment this$0 -> a
    void run() -> run
    com.konka.dialyroads.frament.LocalVideoFragment access$0(com.konka.dialyroads.frament.LocalVideoFragment$2) -> a
com.konka.dialyroads.frament.LocalVideoFragment$2$1 -> com.konka.dialyroads.frament.l:
    com.konka.dialyroads.frament.LocalVideoFragment$2 this$1 -> a
    void run() -> run
com.konka.dialyroads.frament.LocalVideoFragment$3 -> com.konka.dialyroads.frament.m:
    com.konka.dialyroads.frament.LocalVideoFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    com.konka.dialyroads.frament.LocalVideoFragment access$0(com.konka.dialyroads.frament.LocalVideoFragment$3) -> a
com.konka.dialyroads.frament.LocalVideoFragment$3$1 -> com.konka.dialyroads.frament.n:
    com.konka.dialyroads.frament.LocalVideoFragment$3 this$1 -> a
    com.konka.dialyroads.pojo.VideoFileBean val$tvideoFileBean -> b
    void callbackResult(java.lang.Boolean) -> a
com.konka.dialyroads.frament.LocalVideoFragment$3$2 -> com.konka.dialyroads.frament.o:
    com.konka.dialyroads.frament.LocalVideoFragment$3 this$1 -> a
    void run() -> run
    com.konka.dialyroads.frament.LocalVideoFragment$3 access$0(com.konka.dialyroads.frament.LocalVideoFragment$3$2) -> a
com.konka.dialyroads.frament.LocalVideoFragment$3$2$1 -> com.konka.dialyroads.frament.p:
    com.konka.dialyroads.frament.LocalVideoFragment$3$2 this$2 -> a
    com.konka.dialyroads.pojo.VideoFileBean val$tvideoFileBean -> b
    void run() -> run
com.konka.dialyroads.frament.LocalVideoFragment$ItemAdapter_video -> com.konka.dialyroads.frament.q:
    java.util.List lists -> b
    com.konka.dialyroads.frament.LocalVideoFragment this$0 -> a
    java.util.List getLists() -> a
    void setLists(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.konka.dialyroads.frament.LocalVideoFragment$ItemAdapter_video$ViewHolder -> com.konka.dialyroads.frament.r:
    android.widget.TextView text -> a
    android.widget.ImageView image -> b
    android.widget.TextView resolution_ratio -> c
    android.widget.TextView textSize -> d
    android.widget.ImageView upload -> e
    android.widget.ImageView foreverSave -> f
    com.konka.dialyroads.frament.LocalVideoFragment$ItemAdapter_video this$1 -> g
com.konka.dialyroads.frament.LoginFragment -> com.konka.dialyroads.frament.LoginFragment:
    android.widget.Button submit -> b
    android.widget.EditText mUserName -> c
    android.widget.EditText mPassword -> d
    android.app.ProgressDialog progressDialog -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
    android.widget.EditText access$0(com.konka.dialyroads.frament.LoginFragment) -> a
    android.widget.EditText access$1(com.konka.dialyroads.frament.LoginFragment) -> b
com.konka.dialyroads.frament.LoginFragment$1 -> com.konka.dialyroads.frament.s:
    com.konka.dialyroads.frament.LoginFragment this$0 -> a
    void run() -> run
    com.konka.dialyroads.frament.LoginFragment access$0(com.konka.dialyroads.frament.LoginFragment$1) -> a
com.konka.dialyroads.frament.LoginFragment$1$1 -> com.konka.dialyroads.frament.t:
    com.konka.dialyroads.frament.LoginFragment$1 this$1 -> a
    void run() -> run
com.konka.dialyroads.frament.LoginFragment$1$2 -> com.konka.dialyroads.frament.u:
    com.konka.dialyroads.frament.LoginFragment$1 this$1 -> a
    void run() -> run
com.konka.dialyroads.frament.RegisterFragment -> com.konka.dialyroads.frament.v:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.konka.dialyroads.frament.SetBaseFragment -> com.konka.dialyroads.frament.w:
    android.widget.ListView listView -> a
    com.konka.dialyroads.frament.SetBaseFragment$SetCommonAdapter adapter -> b
    java.util.List lists -> c
    java.util.HashMap map -> d
    java.lang.String[] wlhj -> e
    int i -> f
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> g
    android.widget.EditText editText -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init(android.view.View) -> a
    void initdata() -> a
    void set_phone_number() -> b
    void setNet() -> c
    void access$0(com.konka.dialyroads.frament.SetBaseFragment) -> a
    void access$1(com.konka.dialyroads.frament.SetBaseFragment) -> b
com.konka.dialyroads.frament.SetBaseFragment$1 -> com.konka.dialyroads.frament.x:
    com.konka.dialyroads.frament.SetBaseFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.konka.dialyroads.frament.SetBaseFragment access$0(com.konka.dialyroads.frament.SetBaseFragment$1) -> a
com.konka.dialyroads.frament.SetBaseFragment$1$1 -> com.konka.dialyroads.frament.y:
    com.konka.dialyroads.frament.SetBaseFragment$1 this$1 -> a
    int[] val$data_temp_folder_size_v -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.konka.dialyroads.frament.SetBaseFragment$2 -> com.konka.dialyroads.frament.z:
    com.konka.dialyroads.frament.SetBaseFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.konka.dialyroads.frament.SetBaseFragment$3 -> com.konka.dialyroads.frament.aa:
    com.konka.dialyroads.frament.SetBaseFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.konka.dialyroads.frament.SetBaseFragment$SetCommonAdapter -> com.konka.dialyroads.frament.ab:
    java.util.List lists -> a
    com.konka.dialyroads.frament.SetBaseFragment this$0 -> b
    void setLists(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.konka.dialyroads.frament.SetFragment -> com.konka.dialyroads.frament.SetFragment:
    android.support.v4.app.FragmentTabHost mTabHost -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> g
com.konka.dialyroads.frament.SetImageFragment -> com.konka.dialyroads.frament.ac:
    android.widget.ListView listView -> a
    com.konka.dialyroads.frament.SetImageFragment$SetImageAdapter adapter -> b
    java.util.List lists -> c
    java.util.HashMap map -> d
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init(android.view.View) -> a
    void initimagedata() -> a
com.konka.dialyroads.frament.SetImageFragment$1 -> com.konka.dialyroads.frament.ad:
    com.konka.dialyroads.frament.SetImageFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.konka.dialyroads.frament.SetImageFragment access$0(com.konka.dialyroads.frament.SetImageFragment$1) -> a
com.konka.dialyroads.frament.SetImageFragment$1$1 -> com.konka.dialyroads.frament.ae:
    com.konka.dialyroads.frament.SetImageFragment$1 this$1 -> a
    java.util.List val$pictureSizes -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.konka.dialyroads.frament.SetImageFragment$1$2 -> com.konka.dialyroads.frament.af:
    com.konka.dialyroads.frament.SetImageFragment$1 this$1 -> a
    int[] val$data_photosensibility_int -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.konka.dialyroads.frament.SetImageFragment$1$3 -> com.konka.dialyroads.frament.ag:
    com.konka.dialyroads.frament.SetImageFragment$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.konka.dialyroads.frament.SetImageFragment$SetImageAdapter -> com.konka.dialyroads.frament.ah:
    java.util.List lists -> a
    com.konka.dialyroads.frament.SetImageFragment this$0 -> b
    void setLists(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.konka.dialyroads.frament.SetVideoFragment -> com.konka.dialyroads.frament.ai:
    android.widget.ListView listView -> a
    com.konka.dialyroads.frament.SetVideoFragment$SetVideoAdapter adapter -> b
    java.util.List lists -> c
    java.util.HashMap map -> d
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init(android.view.View) -> a
    void initvideodata() -> a
com.konka.dialyroads.frament.SetVideoFragment$1 -> com.konka.dialyroads.frament.aj:
    com.konka.dialyroads.frament.SetVideoFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.konka.dialyroads.frament.SetVideoFragment access$0(com.konka.dialyroads.frament.SetVideoFragment$1) -> a
com.konka.dialyroads.frament.SetVideoFragment$1$1 -> com.konka.dialyroads.frament.ak:
    com.konka.dialyroads.frament.SetVideoFragment$1 this$1 -> a
    int[] val$data_v -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.konka.dialyroads.frament.SetVideoFragment$1$2 -> com.konka.dialyroads.frament.al:
    com.konka.dialyroads.frament.SetVideoFragment$1 this$1 -> a
    java.util.List val$videoSizes -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.konka.dialyroads.frament.SetVideoFragment$1$3 -> com.konka.dialyroads.frament.am:
    com.konka.dialyroads.frament.SetVideoFragment$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.konka.dialyroads.frament.SetVideoFragment$SetVideoAdapter -> com.konka.dialyroads.frament.an:
    com.konka.dialyroads.frament.SetVideoFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.konka.dialyroads.frament.UserFragment -> com.konka.dialyroads.frament.UserFragment:
    com.konka.dialyroads.frament.UserFragment$SectionsPagerAdapter mSectionsPagerAdapter -> a
    android.support.v4.view.ViewPager mViewPager -> b
    com.konka.dialyroads.frament.LoginFragment loginFragment -> c
    com.konka.dialyroads.frament.RegisterFragment registerFragment -> d
    android.view.View view -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> e
    void setUserVisibleHint(boolean) -> e
    void onDestroyView() -> g
com.konka.dialyroads.frament.UserFragment$SectionsPagerAdapter -> com.konka.dialyroads.frament.ao:
    java.util.List fragments -> a
    com.konka.dialyroads.frament.UserFragment this$0 -> b
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
    java.lang.CharSequence getPageTitle(int) -> c
com.konka.dialyroads.frament.WebFileFragment -> com.konka.dialyroads.frament.WebFileFragment:
    android.support.v4.app.FragmentTabHost mTabHost -> b
    android.view.View view -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> g
com.konka.dialyroads.frament.WebImageFragment -> com.konka.dialyroads.frament.ap:
    android.widget.ListView listView -> d
    com.konka.dialyroads.frament.WebImageFragment$ItemAdapter_image itemAdapter -> e
    android.app.ProgressDialog pd -> f
    android.content.Context context -> a
    android.view.View view -> b
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init(android.view.View) -> a
    void init1() -> a
    void onDestroyView() -> g
    com.konka.dialyroads.frament.WebImageFragment$ItemAdapter_image access$0(com.konka.dialyroads.frament.WebImageFragment) -> a
    android.app.ProgressDialog access$1(com.konka.dialyroads.frament.WebImageFragment) -> b
com.konka.dialyroads.frament.WebImageFragment$1 -> com.konka.dialyroads.frament.aq:
    com.konka.dialyroads.frament.WebImageFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.konka.dialyroads.frament.WebImageFragment$2 -> com.konka.dialyroads.frament.ar:
    com.konka.dialyroads.frament.WebImageFragment this$0 -> a
    void run() -> run
    com.konka.dialyroads.frament.WebImageFragment access$0(com.konka.dialyroads.frament.WebImageFragment$2) -> a
com.konka.dialyroads.frament.WebImageFragment$2$1 -> com.konka.dialyroads.frament.as:
    com.konka.dialyroads.frament.WebImageFragment$2 this$1 -> a
    void run() -> run
com.konka.dialyroads.frament.WebImageFragment$ItemAdapter_image -> com.konka.dialyroads.frament.at:
    java.util.List lists -> b
    com.konka.dialyroads.frament.WebImageFragment this$0 -> a
    java.util.List getLists() -> a
    void setLists(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.konka.dialyroads.frament.WebImageFragment$ItemAdapter_image$ViewHolder -> com.konka.dialyroads.frament.au:
    android.widget.TextView text -> a
    android.widget.ImageView image -> b
    com.konka.dialyroads.frament.WebImageFragment$ItemAdapter_image this$1 -> c
com.konka.dialyroads.frament.WebVideoFragment -> com.konka.dialyroads.frament.av:
    android.widget.ListView listView -> d
    com.konka.dialyroads.frament.WebVideoFragment$ItemAdapter_video itemAdapter -> e
    android.app.ProgressDialog pd -> f
    android.content.Context context -> a
    android.view.View view -> b
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init(android.view.View) -> a
    void init1() -> a
    void onDestroyView() -> g
    com.konka.dialyroads.frament.WebVideoFragment$ItemAdapter_video access$0(com.konka.dialyroads.frament.WebVideoFragment) -> a
    android.app.ProgressDialog access$1(com.konka.dialyroads.frament.WebVideoFragment) -> b
com.konka.dialyroads.frament.WebVideoFragment$1 -> com.konka.dialyroads.frament.aw:
    com.konka.dialyroads.frament.WebVideoFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.konka.dialyroads.frament.WebVideoFragment$2 -> com.konka.dialyroads.frament.ax:
    com.konka.dialyroads.frament.WebVideoFragment this$0 -> a
    void run() -> run
    com.konka.dialyroads.frament.WebVideoFragment access$0(com.konka.dialyroads.frament.WebVideoFragment$2) -> a
com.konka.dialyroads.frament.WebVideoFragment$2$1 -> com.konka.dialyroads.frament.ay:
    com.konka.dialyroads.frament.WebVideoFragment$2 this$1 -> a
    void run() -> run
com.konka.dialyroads.frament.WebVideoFragment$ItemAdapter_video -> com.konka.dialyroads.frament.az:
    java.util.List lists -> b
    com.konka.dialyroads.frament.WebVideoFragment this$0 -> a
    java.util.List getLists() -> a
    void setLists(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.konka.dialyroads.frament.WebVideoFragment$ItemAdapter_video$ViewHolder -> com.konka.dialyroads.frament.ba:
    android.widget.TextView title -> a
    android.widget.ImageView image -> b
    com.konka.dialyroads.frament.WebVideoFragment$ItemAdapter_video this$1 -> c
com.konka.dialyroads.myinterface.CallBackResult -> com.konka.dialyroads.c.a:
    void callbackResult(java.lang.Boolean) -> a
com.konka.dialyroads.myinterface.CallBackSize -> com.konka.dialyroads.c.b:
    void callbackSize(int) -> a
com.konka.dialyroads.pojo.AppPara -> com.konka.dialyroads.d.a:
    com.konka.dialyroads.pojo.AppPara appPara -> a
    com.konka.dialyroads.pojo.AppPara$Video_Resolution_Ratio video_Resolution_Ratio -> b
    com.konka.dialyroads.pojo.AppPara$Image_Resolution_Ratio image_Resolution_Ratio -> c
    int exposureCompensation -> d
    int tempFolderSize -> e
    int loopDuration -> f
    java.lang.String telephone -> g
    boolean shutterSound -> h
    boolean RECsound -> i
    com.konka.dialyroads.pojo.AppPara getInstance() -> a
    com.konka.dialyroads.pojo.AppPara$Video_Resolution_Ratio getVideo_Resolution_Ratio() -> b
    com.konka.dialyroads.pojo.AppPara$Image_Resolution_Ratio getImage_Resolution_Ratio() -> c
    int getExposureCompensation() -> d
    void setExposureCompensation(int) -> a
    int getTempFolderSize() -> e
    void setTempFolderSize(int) -> b
    int getLoopDuration() -> f
    void setLoopDuration(int) -> c
    java.lang.String getTelephone() -> g
    void setTelephone(java.lang.String) -> a
    boolean isShutterSound() -> h
    void setShutterSound(boolean) -> a
    boolean isRECsound() -> i
    void setRECsound(boolean) -> b
com.konka.dialyroads.pojo.AppPara$Image_Resolution_Ratio -> com.konka.dialyroads.d.b:
    int width -> b
    int height -> c
    com.konka.dialyroads.pojo.AppPara this$0 -> a
    int getWidth() -> a
    void setWidth(int) -> a
    int getHeight() -> b
    void setHeight(int) -> b
    java.lang.String toString() -> toString
com.konka.dialyroads.pojo.AppPara$Video_Resolution_Ratio -> com.konka.dialyroads.d.c:
    int width -> b
    int height -> c
    com.konka.dialyroads.pojo.AppPara this$0 -> a
    int getWidth() -> a
    void setWidth(int) -> a
    int getHeight() -> b
    void setHeight(int) -> b
    java.lang.String toString() -> toString
com.konka.dialyroads.pojo.CameraSupportedParameters -> com.konka.dialyroads.d.d:
    java.util.List antibandings -> b
    java.util.List colorEffects -> c
    java.util.List flashModes -> d
    java.util.List focusModes -> e
    java.util.List thumbnailSizes -> f
    java.util.List pictureFormats -> g
    java.util.List previewFormats -> h
    java.util.List pictureSizes -> i
    java.util.List previewFpsRange -> j
    java.util.List previewSizes -> k
    java.util.List sceneModes -> l
    java.util.List videoSizes -> m
    java.util.List whiteBalance -> n
    java.util.List zoomRatios -> o
    com.konka.dialyroads.pojo.CameraSupportedParameters instance -> a
    java.util.List getPictureSizes() -> a
    java.util.List getVideoSizes() -> b
    com.konka.dialyroads.pojo.CameraSupportedParameters getInstance() -> c
    void init(android.hardware.Camera) -> a
com.konka.dialyroads.pojo.ImageFileBean -> com.konka.dialyroads.d.e:
    long photo_date -> a
    java.lang.String path -> b
    java.lang.String name -> c
    java.lang.String thumbpath -> d
    java.lang.String size -> e
    java.lang.String showName -> f
    java.lang.String resolution_ratio -> g
    boolean onUploadSuccess -> h
    boolean isOnUploadSuccess() -> a
    void setOnUploadSuccess(boolean) -> a
    java.lang.String getResolution_ratio() -> b
    void setResolution_ratio(java.lang.String) -> a
    java.lang.String getShowName() -> c
    void setShowName(java.lang.String) -> b
    java.lang.String getThumbpath() -> d
    void setThumbpath(java.lang.String) -> c
    long getPhoto_date() -> e
    java.lang.String getSize() -> f
    void setSize(java.lang.String) -> d
    void setPhoto_date(long) -> a
    java.lang.String getPath() -> g
    void setPath(java.lang.String) -> e
    java.lang.String getName() -> h
    void setName(java.lang.String) -> f
com.konka.dialyroads.pojo.User -> com.konka.dialyroads.d.f:
    java.lang.String username -> a
    java.lang.String password -> b
    java.lang.String getUsername() -> a
    java.lang.String getPassword() -> b
com.konka.dialyroads.pojo.VideoFileBean -> com.konka.dialyroads.d.g:
    long starttime -> a
    long endtime -> b
    java.lang.String path -> c
    java.lang.String name -> d
    java.lang.String thumbpath -> e
    java.lang.String size -> f
    java.lang.String resolution_ratio -> g
    boolean onUploadSuccess -> h
    boolean onCrash -> i
    boolean foreverSave -> j
    java.lang.String showName -> k
    boolean isForeverSave() -> a
    void setForeverSave(boolean) -> a
    boolean isOnCrash() -> b
    void setOnCrash(boolean) -> b
    boolean isOnUploadSuccess() -> c
    void setOnUploadSuccess(boolean) -> c
    java.lang.String getResolution_ratio() -> d
    void setResolution_ratio(java.lang.String) -> a
    java.lang.String getShowName() -> e
    void setShowName(java.lang.String) -> b
    java.lang.String getSize() -> f
    void setSize(java.lang.String) -> c
    java.lang.String getThumbpath() -> g
    void setThumbpath(java.lang.String) -> d
    long getStarttime() -> h
    void setStarttime(long) -> a
    long getEndtime() -> i
    void setEndtime(long) -> b
    java.lang.String getPath() -> j
    void setPath(java.lang.String) -> e
    java.lang.String getName() -> k
    void setName(java.lang.String) -> f
com.konka.dialyroads.pojo.WebPicFileInfo -> com.konka.dialyroads.d.h:
    java.lang.String create_time -> a
    java.util.List lists -> b
    int id -> c
    java.lang.String getCreate_time() -> a
    void setCreate_time(java.lang.String) -> a
    java.util.List getLists() -> b
    void setLists(java.util.List) -> a
    void setId(int) -> a
com.konka.dialyroads.pojo.WebVideoFileInfo -> com.konka.dialyroads.d.i:
    int id -> a
    java.lang.String title -> b
    java.lang.String url -> c
    java.lang.String thumbnail -> d
    void setId(int) -> a
    java.lang.String getTitle() -> a
    void setTitle(java.lang.String) -> a
    java.lang.String getUrl() -> b
    void setUrl(java.lang.String) -> b
    java.lang.String getThumbnail() -> c
    void setThumbnail(java.lang.String) -> c
com.konka.dialyroads.popupWindow.MyPopupWindowUtil -> com.konka.dialyroads.e.a:
    android.widget.PopupWindow videoMenu -> a
    android.widget.PopupWindow imageMenu -> b
    android.view.View picsetView -> c
    android.view.View videosetView -> d
    android.content.Context context -> e
    android.view.View showView -> f
    void showPopupWindow() -> a
    boolean isShowing() -> b
    void dismiss() -> c
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
com.konka.dialyroads.service.AccelerationService -> com.konka.dialyroads.service.AccelerationService:
    android.hardware.SensorManager sm -> a
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.konka.dialyroads.service.AccelerationService$1 -> com.konka.dialyroads.service.a:
    com.konka.dialyroads.service.AccelerationService this$0 -> a
    void run() -> run
com.konka.dialyroads.service.BackgroundWorkService -> com.konka.dialyroads.service.BackgroundWorkService:
    com.konka.dialyroads.view.Preview preview -> c
    android.content.Context context -> d
    android.view.WindowManager windowManager -> e
    android.widget.LinearLayout relLay -> f
    android.view.WindowManager$LayoutParams params1 -> g
    com.konka.dialyroads.widget.MyNotification myNotification -> h
    android.content.Intent intent -> i
    android.content.BroadcastReceiver mReceiver -> a
    int i -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void foregroundToBackground(java.lang.Boolean) -> a
    void backgroundToForeground() -> a
    void makeVideo() -> b
    void stopVideo() -> c
    void createNetTraffic() -> d
    void removeNetTraffic() -> e
    com.konka.dialyroads.view.Preview access$0(com.konka.dialyroads.service.BackgroundWorkService) -> a
    android.content.Context access$1(com.konka.dialyroads.service.BackgroundWorkService) -> b
    void access$2(com.konka.dialyroads.service.BackgroundWorkService,com.konka.dialyroads.widget.MyNotification) -> a
    com.konka.dialyroads.widget.MyNotification access$3(com.konka.dialyroads.service.BackgroundWorkService) -> c
com.konka.dialyroads.service.BackgroundWorkService$1 -> com.konka.dialyroads.service.b:
    com.konka.dialyroads.service.BackgroundWorkService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.konka.dialyroads.service.BackgroundWorkService$2 -> com.konka.dialyroads.service.c:
    com.konka.dialyroads.service.BackgroundWorkService this$0 -> a
    java.lang.Boolean val$continue_Record -> b
    void run() -> run
com.konka.dialyroads.util.Assist -> com.konka.dialyroads.f.a:
    int screenWidth -> a
    int screenHeight -> b
    boolean isBackgroundWork -> c
    boolean isTake_Picture -> d
    boolean isRecording -> e
    boolean isTake_Pictureing -> f
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> g
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> h
    java.lang.String domainName -> i
    com.konka.dialyroads.pojo.User user -> j
    com.konka.dialyroads.dao.VideoDBHelper videoDBHelper -> k
    com.konka.dialyroads.dao.ImageDBHelper imageDBHelper -> l
    boolean crash -> m
    boolean foreverSave -> n
com.konka.dialyroads.util.FileUploadTask -> com.konka.dialyroads.f.b:
    android.app.ProgressDialog dialog -> b
    android.content.Context context -> c
    com.konka.dialyroads.pojo.User user -> d
    int fileAllSize -> e
    java.lang.String path -> f
    int fileType -> g
    com.konka.dialyroads.myinterface.CallBackResult callBackResult -> a
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Object[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> b
    void callbackSize(int) -> a
    void callbackResult(java.lang.Boolean) -> a
    void setCallBackResult(com.konka.dialyroads.myinterface.CallBackResult) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.konka.dialyroads.util.MD5 -> com.konka.dialyroads.f.c:
    char[] hexDigits -> a
    java.security.MessageDigest messagedigest -> b
    java.lang.String getMD5String(java.lang.String) -> a
    java.lang.String getMD5String(byte[]) -> a
    java.lang.String bufferToHex(byte[]) -> b
    java.lang.String bufferToHex(byte[],int,int) -> a
    void appendHexPair(byte,java.lang.StringBuffer) -> a
com.konka.dialyroads.util.MyFileUtils -> com.konka.dialyroads.f.d:
    boolean createIfNoExists(java.lang.String) -> a
    boolean createVideoThumbFile(java.lang.String,java.lang.String) -> a
    boolean createImageThumbFile(java.lang.String,java.lang.String) -> b
    void checkVideoThumb(java.lang.String,java.lang.String) -> c
    void checkImageThumb(java.lang.String,java.lang.String) -> d
    boolean checkFileExists(java.lang.String) -> b
com.konka.dialyroads.util.MyMultipartEntity -> com.konka.dialyroads.f.e:
    int alreadyUploadFinishSize -> a
    com.konka.dialyroads.myinterface.CallBackSize callBack -> b
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBack(com.konka.dialyroads.myinterface.CallBackSize) -> a
    void doSth() -> a
    int access$0(com.konka.dialyroads.util.MyMultipartEntity) -> a
    void access$1(com.konka.dialyroads.util.MyMultipartEntity,int) -> a
com.konka.dialyroads.util.MyMultipartEntity$MyFilterOutputStream -> com.konka.dialyroads.f.f:
    com.konka.dialyroads.util.MyMultipartEntity this$0 -> a
    void write(byte[],int,int) -> write
    void write(int) -> write
com.konka.dialyroads.util.MyToast -> com.konka.dialyroads.f.g:
    void show(android.content.Context,java.lang.String) -> a
com.konka.dialyroads.util.Net -> com.konka.dialyroads.f.h:
    java.lang.String upload_url -> a
    java.lang.String login_url -> b
    java.lang.String downdata_url -> c
    java.lang.String video_download_url -> d
    java.io.File sd_file -> e
    void init() -> a
    boolean login(java.lang.String,java.lang.String) -> a
    boolean uploadFile(java.lang.String,int,com.konka.dialyroads.pojo.User,org.apache.http.entity.mime.MultipartEntity) -> a
    java.util.List getpicdata(java.lang.String,java.lang.String) -> b
    java.util.List getvideoinfo(java.lang.String,java.lang.String) -> c
    java.util.List xml2FileInfos(java.io.InputStream) -> a
    java.util.List xml2VideoFileInfos(java.io.InputStream) -> b
com.konka.dialyroads.util.Util -> com.konka.dialyroads.f.i:
    com.konka.dialyroads.DPreference dPreference -> a
    void sendBroadcast(android.content.Context,java.lang.String) -> a
    void sendBroadcast(android.content.Context,java.lang.String,java.lang.Boolean) -> a
    void sendBroadcast(android.content.Context,java.lang.String,java.lang.String) -> a
    int getWidth(android.view.View) -> a
    java.lang.String getFileName(long) -> a
    java.lang.String getShowName(long) -> b
    android.graphics.Bitmap getVideoThumbnail(java.lang.String,int,int,int) -> a
    android.graphics.Bitmap getImageThumbnail(java.lang.String,int,int) -> a
    java.lang.String getFileSizesTostring(java.lang.String) -> a
    int getFilesize(java.lang.String) -> b
    java.lang.String getTimeString(long) -> c
    void playVideo(android.content.Context,java.lang.String) -> b
    void saveAppPara(com.konka.dialyroads.pojo.AppPara,android.content.Context) -> a
    void initAppPara(android.content.Context) -> a
    boolean detectionNetwork(android.content.Context) -> b
    long getFreeMemory() -> a
com.konka.dialyroads.view.Preview -> com.konka.dialyroads.view.Preview:
    android.hardware.Camera mCamera -> b
    android.view.SurfaceHolder mHolder -> c
    com.konka.dialyroads.view.Preview$MovieRecorder movieRecorder -> d
    android.widget.ImageView iFocusRect -> e
    android.view.animation.Animation rotateAnimation -> f
    java.util.Timer timer -> g
    android.media.SoundPool pool -> h
    int id_success -> i
    int id_error -> j
    int id_pic -> k
    int count -> a
    android.hardware.Camera$AutoFocusCallback myAutoFocusCallback -> l
    android.hardware.Camera getmCamera() -> getmCamera
    void init(android.content.Context) -> a
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void takePicture() -> a
    void startRecording() -> b
    void stopRecording() -> c
    void onResume() -> d
    void onPause() -> e
    void openCamera(boolean) -> a
    void startCameraPreview() -> f
    void setPreviewSize() -> h
    void closeCamera() -> i
    void startScaleAnim() -> g
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onDetachedFromWindow() -> onDetachedFromWindow
    java.lang.String setupValuesPref(java.util.List,java.lang.String,java.lang.String) -> a
    android.widget.ImageView access$0(com.konka.dialyroads.view.Preview) -> a
    void access$1(com.konka.dialyroads.view.Preview,android.widget.ImageView) -> a
    android.hardware.Camera access$2(com.konka.dialyroads.view.Preview) -> b
    android.media.SoundPool access$3(com.konka.dialyroads.view.Preview) -> c
    int access$4(com.konka.dialyroads.view.Preview) -> d
    com.konka.dialyroads.view.Preview$MovieRecorder access$5(com.konka.dialyroads.view.Preview) -> e
com.konka.dialyroads.view.Preview$1 -> com.konka.dialyroads.view.a:
    com.konka.dialyroads.view.Preview this$0 -> a
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
    com.konka.dialyroads.view.Preview access$0(com.konka.dialyroads.view.Preview$1) -> a
com.konka.dialyroads.view.Preview$1$1 -> com.konka.dialyroads.view.b:
    com.konka.dialyroads.view.Preview$1 this$1 -> a
    void onShutter() -> onShutter
com.konka.dialyroads.view.Preview$2 -> com.konka.dialyroads.view.c:
    com.konka.dialyroads.view.Preview this$0 -> a
    void run() -> run
com.konka.dialyroads.view.Preview$MovieRecorder -> com.konka.dialyroads.view.d:
    android.media.MediaRecorder mediarecorder -> b
    com.konka.dialyroads.pojo.VideoFileBean videoFileBean -> c
    boolean onCrash -> d
    boolean foreverSave -> e
    com.konka.dialyroads.view.Preview this$0 -> a
    void delTempVideo() -> c
    void startRecording() -> a
    void stopRecording() -> b
    com.konka.dialyroads.pojo.VideoFileBean access$0(com.konka.dialyroads.view.Preview$MovieRecorder) -> a
com.konka.dialyroads.view.Preview$PhotoHandler -> com.konka.dialyroads.view.e:
    com.konka.dialyroads.pojo.ImageFileBean imageFileBean -> b
    com.konka.dialyroads.view.Preview this$0 -> a
    void onPictureTaken(byte[],android.hardware.Camera) -> onPictureTaken
com.konka.dialyroads.widget.MyApplication -> com.konka.dialyroads.widget.MyApplication:
    java.lang.String BASE_STORAGE_DIRECTORY -> a
    java.lang.String VIDEOFILE_STORAGE_DIRECTORY -> b
    java.lang.String IMAGEFILE_STORAGE_DIRECTORY -> c
    java.lang.String THUMBFILE_STORAGE_DIRECTORY -> d
    com.konka.dialyroads.widget.MyApplication mApplication -> g
    java.lang.String OPLAYER_CACHE_BASE -> e
    java.lang.String OPLAYER_VIDEO_THUMB -> f
    void onCreate() -> onCreate
    void init() -> a
    void init(android.content.Context) -> b
    void initImageLoader(android.content.Context) -> a
com.konka.dialyroads.widget.MyNotification -> com.konka.dialyroads.widget.a:
    android.app.Notification mNotification -> c
    android.app.NotificationManager mNotificationManager -> d
    android.content.Context context -> e
    boolean isshow -> f
    android.content.BroadcastReceiver receiver -> a
    int i -> b
    void showNotification() -> a
    void cancelNotification() -> b
    boolean isShowing() -> c
    void showNotification1(android.content.Context) -> a
    void updata(java.lang.CharSequence) -> a
    android.app.Notification access$0(com.konka.dialyroads.widget.MyNotification) -> a
    android.app.NotificationManager access$1(com.konka.dialyroads.widget.MyNotification) -> b
com.konka.dialyroads.widget.MyNotification$1 -> com.konka.dialyroads.widget.b:
    com.konka.dialyroads.widget.MyNotification this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.konka.dialyroads.widget.MyNotification$1$1 -> com.konka.dialyroads.widget.c:
    com.konka.dialyroads.widget.MyNotification$1 this$1 -> a
    android.content.Context val$context -> b
    void run() -> run
com.nmbb.oplayer.OPlayerApplication -> com.nmbb.oplayer.a:
    com.nmbb.oplayer.OPlayerApplication mApplication -> c
    java.lang.String OPLAYER_CACHE_BASE -> a
    java.lang.String OPLAYER_VIDEO_THUMB -> b
    void onCreate() -> onCreate
    void init() -> b
    android.content.Context getContext() -> a
com.nmbb.oplayer.OPreference -> com.nmbb.oplayer.b:
    android.content.SharedPreferences mPreference -> a
    boolean putBooleanAndCommit(java.lang.String,boolean) -> a
    boolean getBoolean(java.lang.String,boolean) -> b
com.nmbb.oplayer.database.DbHelper -> com.nmbb.oplayer.a.a:
    int create(java.lang.Object) -> a
    boolean exists(java.lang.Object,java.util.Map) -> a
com.nmbb.oplayer.database.SQLiteHelperOrm -> com.nmbb.oplayer.a.b:
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> a
com.nmbb.oplayer.exception.Logger -> com.nmbb.oplayer.b.a:
    boolean isLog -> a
    void e(java.lang.Throwable) -> a
    void i(java.lang.String) -> a
    void e(java.lang.String) -> b
com.nmbb.oplayer.po.POMedia -> com.nmbb.oplayer.c.a:
    java.lang.String title -> a
    java.lang.String title_key -> b
    java.lang.String path -> c
    long last_access_time -> d
    long last_modify_time -> e
    long file_size -> f
    java.lang.String mime_type -> g
    int type -> h
    int status -> i
    long temp_file_size -> j
com.nmbb.oplayer.receiver.MediaScannerReceiver -> com.nmbb.oplayer.receiver.MediaScannerReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void scanDirectory(android.content.Context,java.lang.String) -> a
    void scanFile(android.content.Context,java.lang.String) -> b
com.nmbb.oplayer.service.MediaScannerService -> com.nmbb.oplayer.service.MediaScannerService:
    java.util.ArrayList observers -> a
    java.util.concurrent.ConcurrentHashMap mScanMap -> b
    int mServiceStatus -> c
    com.nmbb.oplayer.database.DbHelper mDbHelper -> d
    java.util.Map mDbWhere -> e
    android.os.Handler mHandler -> f
    com.nmbb.oplayer.service.MediaScannerService$MediaScannerServiceBinder mBinder -> g
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void parseIntent(android.content.Intent) -> a
    void run() -> run
    void scan() -> a
    void scanFile(java.lang.String,java.lang.String) -> a
    void scanDirectory(java.lang.String) -> a
    void eachAllMedias(java.io.File) -> a
    void save(com.nmbb.oplayer.po.POMedia) -> a
    void notifyObservers(int,com.nmbb.oplayer.po.POMedia) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    java.util.ArrayList access$0(com.nmbb.oplayer.service.MediaScannerService) -> a
com.nmbb.oplayer.service.MediaScannerService$1 -> com.nmbb.oplayer.service.a:
    com.nmbb.oplayer.service.MediaScannerService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.nmbb.oplayer.service.MediaScannerService$IMediaScannerObserver -> com.nmbb.oplayer.service.b:
    void update(int,com.nmbb.oplayer.po.POMedia) -> a
com.nmbb.oplayer.service.MediaScannerService$MediaScannerServiceBinder -> com.nmbb.oplayer.service.c:
    com.nmbb.oplayer.service.MediaScannerService this$0 -> a
com.nmbb.oplayer.ui.PlayerActivity -> com.nmbb.oplayer.ui.PlayerActivity:
    int mVideoWidth -> a
    int mVideoHeight -> b
    io.vov.vitamio.MediaPlayer mMediaPlayer -> c
    android.view.SurfaceView mPreview -> d
    android.view.SurfaceHolder holder -> e
    java.lang.String path -> f
    boolean mIsVideoSizeKnown -> g
    boolean mIsVideoReadyToBePlayed -> h
    void onCreate(android.os.Bundle) -> onCreate
    void playVideo() -> a
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> a
    void onCompletion(io.vov.vitamio.MediaPlayer) -> a
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> a
    void onPrepared(io.vov.vitamio.MediaPlayer) -> b
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void releaseMediaPlayer() -> b
    void doCleanUp() -> c
    void startVideoPlayback() -> d
com.nmbb.oplayer.ui.VideoPlayerActivity -> com.nmbb.oplayer.ui.VideoPlayerActivity:
    java.lang.String mPath -> a
    java.lang.String mTitle -> b
    io.vov.vitamio.widget.VideoView mVideoView -> c
    android.view.View mVolumeBrightnessLayout -> d
    android.widget.ImageView mOperationBg -> e
    android.widget.ImageView mOperationPercent -> f
    android.media.AudioManager mAudioManager -> g
    int mMaxVolume -> h
    int mVolume -> i
    float mBrightness -> j
    int mLayout -> k
    android.view.GestureDetector mGestureDetector -> l
    io.vov.vitamio.widget.MediaController mMediaController -> m
    android.view.View mLoadingView -> n
    android.os.Handler mDismissHandler -> o
    boolean needResume -> p
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void endGesture() -> a
    void onVolumeSlide(float) -> a
    void onBrightnessSlide(float) -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCompletion(io.vov.vitamio.MediaPlayer) -> a
    void stopPlayer() -> b
    void startPlayer() -> c
    boolean isPlaying() -> d
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> a
    android.view.View access$0(com.nmbb.oplayer.ui.VideoPlayerActivity) -> a
    int access$1(com.nmbb.oplayer.ui.VideoPlayerActivity) -> b
    void access$2(com.nmbb.oplayer.ui.VideoPlayerActivity,int) -> a
    io.vov.vitamio.widget.VideoView access$3(com.nmbb.oplayer.ui.VideoPlayerActivity) -> c
    void access$4(com.nmbb.oplayer.ui.VideoPlayerActivity,float) -> a
    void access$5(com.nmbb.oplayer.ui.VideoPlayerActivity,float) -> b
com.nmbb.oplayer.ui.VideoPlayerActivity$1 -> com.nmbb.oplayer.ui.a:
    com.nmbb.oplayer.ui.VideoPlayerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.nmbb.oplayer.ui.VideoPlayerActivity$MyGestureListener -> com.nmbb.oplayer.ui.b:
    com.nmbb.oplayer.ui.VideoPlayerActivity this$0 -> a
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
com.nmbb.oplayer.ui.vitamio.InitActivity -> com.nmbb.oplayer.ui.vitamio.InitActivity:
    android.app.ProgressDialog mPD -> a
    android.os.Handler uiHandler -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.app.ProgressDialog access$0(com.nmbb.oplayer.ui.vitamio.InitActivity) -> a
    void access$1(com.nmbb.oplayer.ui.vitamio.InitActivity,android.app.ProgressDialog) -> a
    android.os.Handler access$2(com.nmbb.oplayer.ui.vitamio.InitActivity) -> b
com.nmbb.oplayer.ui.vitamio.InitActivity$1 -> com.nmbb.oplayer.ui.vitamio.a:
    com.nmbb.oplayer.ui.vitamio.InitActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.nmbb.oplayer.ui.vitamio.InitActivity$2 -> com.nmbb.oplayer.ui.vitamio.b:
    com.nmbb.oplayer.ui.vitamio.InitActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nmbb.oplayer.ui.vitamio.LibsChecker -> com.nmbb.oplayer.ui.vitamio.c:
    boolean checkVitamioLibs(android.app.Activity,int) -> a
com.nmbb.oplayer.util.FileUtils -> com.nmbb.oplayer.d.a:
    java.lang.String[] VIDEO_EXTENSIONS -> a
    java.lang.String[] AUDIO_EXTENSIONS -> b
    java.util.HashSet mHashVideo -> c
    java.util.HashSet mHashAudio -> d
    java.util.HashMap mMimeType -> e
    boolean isVideo(java.io.File) -> a
    java.lang.String getFileExtension(java.io.File) -> b
    boolean createIfNoExists(java.lang.String) -> a
    java.lang.String getMimeType(java.lang.String) -> b
com.nmbb.oplayer.util.PinyinUtils -> com.nmbb.oplayer.d.b:
    net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat spellFormat -> a
    java.lang.String chineneToSpell(java.lang.String) -> a
com.nmbb.oplayer.util.StringUtils -> com.nmbb.oplayer.d.c:
    boolean isEmpty(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.BaseDiscCache -> com.b.a.a.a.a:
    java.io.File cacheDir -> a
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> b
    java.io.File get(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.b.a.a.a.b:
    void put(java.lang.String,java.io.File) -> a
    java.io.File get(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache -> com.b.a.a.a.c:
    java.util.concurrent.atomic.AtomicInteger cacheSize -> b
    int sizeLimit -> c
    java.util.Map lastUsageDates -> d
    void calculateCacheSizeAndFillUsageMap() -> a
    void put(java.lang.String,java.io.File) -> a
    java.io.File get(java.lang.String) -> a
    int removeNext() -> b
    int getSize(java.io.File) -> a
    java.util.Map access$0(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> a
    java.util.concurrent.atomic.AtomicInteger access$1(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> b
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1 -> com.b.a.a.a.d:
    com.nostra13.universalimageloader.cache.disc.LimitedDiscCache this$0 -> a
    void run() -> run
com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.b.a.a.a.a.a:
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.b.a.a.a.a.b:
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.b.a.a.a.a.c:
    void put(java.lang.String,java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.b.a.a.a.b.a:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.b.a.a.a.b.b:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.b.a.a.a.b.c:
    java.lang.String generate(java.lang.String) -> a
    byte[] getMD5(byte[]) -> a
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.b.a.a.b.a:
    java.util.Map softMap -> a
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
    java.lang.ref.Reference createReference(java.lang.Object) -> c
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.b.a.a.b.b:
    int sizeLimit -> a
    java.util.concurrent.atomic.AtomicInteger cacheSize -> b
    java.util.List hardCache -> c
    boolean put(java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    int getSizeLimit() -> b
    int getSize(java.lang.Object) -> d
    java.lang.Object removeNext() -> c
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.b.a.a.b.c:
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.b.a.a.b.a.a:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> a
    java.util.Comparator keyComparator -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.b.a.a.b.a.b:
    java.util.Map lruCache -> a
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void remove(java.lang.String) -> b
    int getSize(android.graphics.Bitmap) -> a
    android.graphics.Bitmap removeNext() -> d
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> b
    java.lang.Object get(java.lang.Object) -> a
    java.lang.ref.Reference createReference(java.lang.Object) -> c
    void remove(java.lang.Object) -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
    int getSize(java.lang.Object) -> d
    java.lang.Object removeNext() -> c
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.b.a.a.b.a.c:
    java.util.LinkedHashMap map -> a
    int maxSize -> b
    int size -> c
    android.graphics.Bitmap get(java.lang.String) -> a
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    void trimToSize(int) -> a
    void remove(java.lang.String) -> b
    java.util.Collection keys() -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> b
    java.lang.String toString() -> toString
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.b.a.b.a:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> a
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> a
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createDiscCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,int,int) -> a
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createReserveDiscCache(java.io.File) -> a
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware createMemoryCache(int) -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> a
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> a
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> b
    java.util.concurrent.ThreadFactory createThreadFactory(int) -> b
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.b.a.b.b:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> a
    java.lang.ThreadGroup group -> b
    java.util.concurrent.atomic.AtomicInteger threadNumber -> c
    java.lang.String namePrefix -> d
    int threadPriority -> e
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.b.a.b.c:
    android.graphics.Bitmap bitmap -> a
    java.lang.String imageUri -> b
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> c
    java.lang.String memoryCacheKey -> d
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> e
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> f
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> g
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> h
    boolean loggingEnabled -> i
    void run() -> run
    boolean isViewWasReused() -> a
    void setLoggingEnabled(boolean) -> a
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.b.a.b.d:
    int imageResOnLoading -> a
    int imageResForEmptyUri -> b
    int imageResOnFail -> c
    android.graphics.drawable.Drawable imageOnLoading -> d
    android.graphics.drawable.Drawable imageForEmptyUri -> e
    android.graphics.drawable.Drawable imageOnFail -> f
    boolean resetViewBeforeLoading -> g
    boolean cacheInMemory -> h
    boolean cacheOnDisc -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> j
    android.graphics.BitmapFactory$Options decodingOptions -> k
    int delayBeforeLoading -> l
    boolean considerExifParams -> m
    java.lang.Object extraForDownloader -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> q
    android.os.Handler handler -> r
    boolean isSyncLoading -> s
    boolean shouldShowImageOnLoading() -> a
    boolean shouldShowImageForEmptyUri() -> b
    boolean shouldShowImageOnFail() -> c
    boolean shouldPreProcess() -> d
    boolean shouldPostProcess() -> e
    boolean shouldDelayBeforeLoading() -> f
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> a
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> b
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> c
    boolean isResetViewBeforeLoading() -> g
    boolean isCacheInMemory() -> h
    boolean isCacheOnDisc() -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> j
    android.graphics.BitmapFactory$Options getDecodingOptions() -> k
    int getDelayBeforeLoading() -> l
    boolean isConsiderExifParams() -> m
    java.lang.Object getExtraForDownloader() -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> q
    android.os.Handler getHandler() -> r
    boolean isSyncLoading() -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> t
    int access$0(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    int access$1(com.nostra13.universalimageloader.core.DisplayImageOptions) -> b
    int access$2(com.nostra13.universalimageloader.core.DisplayImageOptions) -> c
    android.graphics.drawable.Drawable access$3(com.nostra13.universalimageloader.core.DisplayImageOptions) -> d
    android.graphics.drawable.Drawable access$4(com.nostra13.universalimageloader.core.DisplayImageOptions) -> e
    android.graphics.drawable.Drawable access$5(com.nostra13.universalimageloader.core.DisplayImageOptions) -> f
    boolean access$6(com.nostra13.universalimageloader.core.DisplayImageOptions) -> g
    boolean access$7(com.nostra13.universalimageloader.core.DisplayImageOptions) -> h
    boolean access$8(com.nostra13.universalimageloader.core.DisplayImageOptions) -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$9(com.nostra13.universalimageloader.core.DisplayImageOptions) -> j
    android.graphics.BitmapFactory$Options access$10(com.nostra13.universalimageloader.core.DisplayImageOptions) -> k
    int access$11(com.nostra13.universalimageloader.core.DisplayImageOptions) -> l
    boolean access$12(com.nostra13.universalimageloader.core.DisplayImageOptions) -> m
    java.lang.Object access$13(com.nostra13.universalimageloader.core.DisplayImageOptions) -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$14(com.nostra13.universalimageloader.core.DisplayImageOptions) -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$15(com.nostra13.universalimageloader.core.DisplayImageOptions) -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$16(com.nostra13.universalimageloader.core.DisplayImageOptions) -> q
    android.os.Handler access$17(com.nostra13.universalimageloader.core.DisplayImageOptions) -> r
    boolean access$18(com.nostra13.universalimageloader.core.DisplayImageOptions) -> s
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.b.a.b.e:
    int imageResOnLoading -> a
    int imageResForEmptyUri -> b
    int imageResOnFail -> c
    android.graphics.drawable.Drawable imageOnLoading -> d
    android.graphics.drawable.Drawable imageForEmptyUri -> e
    android.graphics.drawable.Drawable imageOnFail -> f
    boolean resetViewBeforeLoading -> g
    boolean cacheInMemory -> h
    boolean cacheOnDisc -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> j
    android.graphics.BitmapFactory$Options decodingOptions -> k
    int delayBeforeLoading -> l
    boolean considerExifParams -> m
    java.lang.Object extraForDownloader -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> q
    android.os.Handler handler -> r
    boolean isSyncLoading -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> c
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> c
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> a
    int access$0(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> a
    int access$1(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> b
    int access$2(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> c
    android.graphics.drawable.Drawable access$3(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> d
    android.graphics.drawable.Drawable access$4(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> e
    android.graphics.drawable.Drawable access$5(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> f
    boolean access$6(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> g
    boolean access$7(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> h
    boolean access$8(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$9(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> j
    android.graphics.BitmapFactory$Options access$10(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> k
    int access$11(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> l
    boolean access$12(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> m
    java.lang.Object access$13(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$14(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$15(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$16(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> q
    android.os.Handler access$17(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> r
    boolean access$18(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> s
com.nostra13.universalimageloader.core.ImageLoader -> com.b.a.b.f:
    java.lang.String TAG -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> b
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> c
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener -> d
    com.nostra13.universalimageloader.core.ImageLoader instance -> e
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> a
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> a
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> a
    void displayImage(java.lang.String,android.widget.ImageView) -> a
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> a
    android.graphics.Bitmap loadImageSync(java.lang.String) -> a
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    void checkConfiguration() -> b
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.b.a.b.g:
    android.content.res.Resources resources -> a
    int maxImageWidthForMemoryCache -> b
    int maxImageHeightForMemoryCache -> c
    int maxImageWidthForDiscCache -> d
    int maxImageHeightForDiscCache -> e
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> f
    int imageQualityForDiscCache -> g
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiscCache -> h
    java.util.concurrent.Executor taskExecutor -> i
    java.util.concurrent.Executor taskExecutorForCachedImages -> j
    boolean customExecutor -> k
    boolean customExecutorForCachedImages -> l
    int threadPoolSize -> m
    int threadPriority -> n
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> o
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> p
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> q
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> r
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> t
    boolean writeLogs -> u
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware reserveDiscCache -> v
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> w
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> x
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.b.a.b.h:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> a
    android.content.Context context -> b
    int maxImageWidthForMemoryCache -> c
    int maxImageHeightForMemoryCache -> d
    int maxImageWidthForDiscCache -> e
    int maxImageHeightForDiscCache -> f
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> g
    int imageQualityForDiscCache -> h
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiscCache -> i
    java.util.concurrent.Executor taskExecutor -> j
    java.util.concurrent.Executor taskExecutorForCachedImages -> k
    boolean customExecutor -> l
    boolean customExecutorForCachedImages -> m
    int threadPoolSize -> n
    int threadPriority -> o
    boolean denyCacheImageMultipleSizesInMemory -> p
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> q
    int memoryCacheSize -> r
    int discCacheSize -> s
    int discCacheFileCount -> t
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> u
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> v
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator discCacheFileNameGenerator -> w
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> x
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> y
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> z
    boolean writeLogs -> A
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> b
    void initEmptyFieldsWithDefaultValues() -> c
    android.content.Context access$0(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> a
    int access$1(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> b
    int access$2(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> c
    int access$3(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> d
    int access$4(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> e
    android.graphics.Bitmap$CompressFormat access$5(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> f
    int access$6(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> g
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$7(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> h
    java.util.concurrent.Executor access$8(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> i
    java.util.concurrent.Executor access$9(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> j
    int access$10(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> k
    int access$11(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> l
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$12(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> m
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware access$13(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> n
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware access$14(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> o
    com.nostra13.universalimageloader.core.DisplayImageOptions access$15(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> p
    boolean access$16(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> q
    com.nostra13.universalimageloader.core.download.ImageDownloader access$17(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> r
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$18(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> s
    boolean access$19(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> t
    boolean access$20(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> u
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.b.a.b.i:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> a
    java.util.concurrent.Executor taskExecutor -> b
    java.util.concurrent.Executor taskExecutorForCachedImages -> c
    java.util.concurrent.ExecutorService taskDistributor -> d
    java.util.Map cacheKeysForImageAwares -> e
    java.util.Map uriLocks -> f
    java.util.concurrent.atomic.AtomicBoolean paused -> g
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> h
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> i
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> a
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> a
    void initExecutorsIfNeed() -> d
    java.util.concurrent.Executor createTaskExecutor() -> e
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> a
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> a
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> b
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> a
    java.util.concurrent.atomic.AtomicBoolean getPause() -> a
    boolean isNetworkDenied() -> b
    boolean isSlowNetwork() -> c
    void access$0(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> a
    java.util.concurrent.Executor access$1(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> b
    java.util.concurrent.Executor access$2(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> c
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.b.a.b.j:
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> a
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> b
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.b.a.b.k:
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> b
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> c
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> f
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> g
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.b.a.b.l:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> e
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> f
    android.os.Handler handler -> g
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> h
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> j
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> k
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> l
    boolean writeLogs -> m
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> n
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> b
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> o
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> c
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> d
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> p
    boolean imageAwareCollected -> q
    void run() -> run
    boolean waitIfPaused() -> b
    boolean delayIfNeed() -> c
    boolean checkTaskIsNotActual() -> d
    boolean checkViewCollected() -> e
    boolean checkViewReused() -> f
    boolean checkTaskIsInterrupted() -> g
    android.graphics.Bitmap tryLoadBitmap() -> h
    java.io.File getImageFileInDiscCache() -> i
    android.graphics.Bitmap decodeImage(java.lang.String) -> a
    java.lang.String tryCacheImageOnDisc(java.io.File) -> a
    boolean downloadSizedImage(java.io.File,int,int) -> a
    void downloadImage(java.io.File) -> b
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> a
    void fireCancelEvent() -> j
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> k
    java.lang.String getLoadingUri() -> a
    void log(java.lang.String) -> b
    void log(java.lang.String,java.lang.Object[]) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$0(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> a
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.b.a.b.m:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> b
    java.lang.Throwable val$failCause -> c
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.b.a.b.n:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
    void run() -> run
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.b.a.b.o:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> a
    android.graphics.Bitmap bitmap -> b
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> c
    android.os.Handler handler -> d
    void run() -> run
com.nostra13.universalimageloader.core.assist.FailReason -> com.b.a.b.a.a:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> a
    java.lang.Throwable cause -> b
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.b.a.b.a.b:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> a
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> b
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> c
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> d
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> e
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] ENUM$VALUES -> f
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.b.a.b.a.c:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageLoadingListener -> com.b.a.b.a.d:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.b.a.b.a.e:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> a
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> b
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> c
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> d
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> e
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] ENUM$VALUES -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.b.a.b.a.f:
    int width -> a
    int height -> b
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> a
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> a
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.b.a.b.a.g:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> a
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> b
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> c
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] ENUM$VALUES -> d
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil -> com.b.a.b.a.h:
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    java.util.Comparator createFuzzyKeyComparator() -> a
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1 -> com.b.a.b.a.i:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.b.a.b.a.j:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> a
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> b
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] ENUM$VALUES -> c
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener -> com.b.a.b.a.k:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.assist.SyncImageLoadingListener -> com.b.a.b.a.l:
    android.graphics.Bitmap loadedImage -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getLoadedBitmap() -> a
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.b.a.b.a.m:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> a
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> b
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> c
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] ENUM$VALUES -> d
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> a
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> a
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.b.a.b.a.a.a:
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.b.a.b.a.a.b:
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.b.a.b.a.a.c:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.b.a.b.a.a.d:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> b
    int count -> d
    int capacity -> e
    java.util.concurrent.locks.ReentrantLock lock -> c
    java.util.concurrent.locks.Condition notEmpty -> f
    java.util.concurrent.locks.Condition notFull -> g
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> c
    java.lang.Object unlinkFirst() -> f
    java.lang.Object unlinkLast() -> g
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    void addLast(java.lang.Object) -> a
    boolean offerFirst(java.lang.Object) -> b
    boolean offerLast(java.lang.Object) -> c
    void putLast(java.lang.Object) -> d
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object removeFirst() -> a
    java.lang.Object pollFirst() -> b
    java.lang.Object takeFirst() -> c
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object getFirst() -> d
    java.lang.Object peekFirst() -> e
    boolean removeFirstOccurrence(java.lang.Object) -> e
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.b.a.b.a.a.e:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> a
    java.lang.Object nextItem -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> c
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    void advance() -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.b.a.b.a.a.f:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.b.a.b.a.a.g:
    java.lang.Object item -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> c
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.b.a.b.b.a:
    boolean loggingEnabled -> a
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> b
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> a
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> a
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> b
    android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options) -> a
    android.graphics.Bitmap considerExactScaleAndOrientaiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> a
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.b.a.b.b.b:
    int rotation -> a
    boolean flipHorizontal -> b
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.b.a.b.b.c:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> a
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> b
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.b.a.b.b.d:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.b.a.b.b.e:
    java.lang.String imageKey -> a
    java.lang.String imageUri -> b
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> c
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> d
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> e
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> f
    java.lang.Object extraForDownloader -> g
    boolean considerExifParams -> h
    android.graphics.BitmapFactory$Options decodingOptions -> i
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> a
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> b
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> c
    java.lang.String getImageKey() -> a
    java.lang.String getImageUri() -> b
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> c
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> d
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> e
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> f
    java.lang.Object getExtraForDownloader() -> g
    boolean shouldConsiderExifParams() -> h
    android.graphics.BitmapFactory$Options getDecodingOptions() -> i
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.b.a.b.c.a:
    android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> a
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.b.a.b.c.b:
    int roundPixels -> a
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> b
    android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> a
    android.graphics.Bitmap roundCorners(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageViewAware,int) -> a
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,int,android.graphics.Rect,android.graphics.Rect,int,int) -> a
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> a
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.b.a.b.c.c:
    android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> a
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.b.a.b.d.a:
    android.content.Context context -> a
    int connectTimeout -> b
    int readTimeout -> c
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> d
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> b
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> c
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> d
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> e
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> f
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> g
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> h
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme() -> a
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.b.a.b.d.b:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.b.a.b.d.c:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> b
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> c
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> d
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> e
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> f
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> g
    java.lang.String scheme -> h
    java.lang.String uriPrefix -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] ENUM$VALUES -> j
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> a
    boolean belongsTo(java.lang.String) -> d
    java.lang.String wrap(java.lang.String) -> b
    java.lang.String crop(java.lang.String) -> c
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader -> com.b.a.b.d.d:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> a
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> b
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme() -> a
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader -> com.b.a.b.d.e:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> a
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> b
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme() -> a
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.b.a.b.e.a:
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> c
    android.view.View getWrappedView() -> d
    boolean isCollected() -> e
    int getId() -> f
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> a
    boolean setImageBitmap(android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.core.imageaware.ImageNonViewAware -> com.b.a.b.e.b:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> a
    com.nostra13.universalimageloader.core.assist.ViewScaleType scaleType -> b
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> c
    android.view.View getWrappedView() -> d
    boolean isCollected() -> e
    int getId() -> f
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> a
    boolean setImageBitmap(android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.b.a.b.e.c:
    java.lang.ref.Reference imageViewRef -> a
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> c
    android.widget.ImageView getWrappedView() -> g
    boolean isCollected() -> e
    int getId() -> f
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> a
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> a
    boolean setImageBitmap(android.graphics.Bitmap) -> a
    android.view.View getWrappedView() -> d
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.b.a.b.f.a:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.b.a.c.a:
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$ViewScaleType -> a
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> a
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> b
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$ViewScaleType() -> a
com.nostra13.universalimageloader.utils.IoUtils -> com.b.a.c.b:
    void copyStream(java.io.InputStream,java.io.OutputStream) -> a
    void closeSilently(java.io.Closeable) -> a
com.nostra13.universalimageloader.utils.L -> com.b.a.c.c:
    boolean DISABLED -> a
    void d(java.lang.String,java.lang.Object[]) -> a
    void i(java.lang.String,java.lang.Object[]) -> b
    void w(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.Object[]) -> d
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.utils.StorageUtils -> com.b.a.c.d:
    java.io.File getCacheDirectory(android.content.Context) -> a
    java.io.File getIndividualCacheDirectory(android.content.Context) -> b
    java.io.File getExternalCacheDir(android.content.Context) -> c
    boolean hasExternalStoragePermission(android.content.Context) -> d
eu.inmite.android.lib.dialogs.BaseDialogBuilder -> a.a.a.a.a.a:
    java.lang.String ARG_REQUEST_CODE -> a
    java.lang.String ARG_CANCELABLE_ON_TOUCH_OUTSIDE -> b
    java.lang.String DEFAULT_TAG -> c
    int DEFAULT_REQUEST_CODE -> d
    android.content.Context mContext -> e
    android.support.v4.app.FragmentManager mFragmentManager -> f
    java.lang.Class mClass -> g
    android.support.v4.app.Fragment mTargetFragment -> h
    boolean mCancelable -> i
    boolean mCancelableOnTouchOutside -> j
    java.lang.String mTag -> k
    int mRequestCode -> l
    eu.inmite.android.lib.dialogs.BaseDialogBuilder self() -> a
    android.os.Bundle prepareArguments() -> b
    eu.inmite.android.lib.dialogs.BaseDialogBuilder setRequestCode(int) -> a
    android.support.v4.app.DialogFragment show() -> c
eu.inmite.android.lib.dialogs.BaseDialogFragment -> a.a.a.a.a.b:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder build(eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder) -> a
    void onDestroyView() -> g
eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder -> a.a.a.a.a.c:
    android.support.v4.app.DialogFragment mDialogFragment -> a
    android.content.Context mContext -> b
    android.view.ViewGroup mContainer -> c
    android.view.LayoutInflater mInflater -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mPositiveButtonText -> f
    android.view.View$OnClickListener mPositiveButtonListener -> g
    java.lang.CharSequence mNegativeButtonText -> h
    android.view.View$OnClickListener mNegativeButtonListener -> i
    java.lang.CharSequence mNeutralButtonText -> j
    android.view.View$OnClickListener mNeutralButtonListener -> k
    java.lang.CharSequence mMessage -> l
    android.view.View mView -> m
    boolean mViewSpacingSpecified -> n
    int mViewSpacingLeft -> o
    int mViewSpacingTop -> p
    int mViewSpacingRight -> q
    int mViewSpacingBottom -> r
    android.widget.ListAdapter mListAdapter -> s
    int mListCheckedItemIdx -> t
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> u
    int mTitleTextColor -> v
    int mTitleSeparatorColor -> w
    int mMessageTextColor -> x
    android.content.res.ColorStateList mButtonTextColor -> y
    int mButtonSeparatorColor -> z
    int mButtonBackgroundColorNormal -> A
    int mButtonBackgroundColorPressed -> B
    int mButtonBackgroundColorFocused -> C
    eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder setTitle(java.lang.CharSequence) -> a
    eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder setPositiveButton(java.lang.CharSequence,android.view.View$OnClickListener) -> a
    eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder setNegativeButton(java.lang.CharSequence,android.view.View$OnClickListener) -> b
    eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder setMessage(java.lang.CharSequence) -> b
    eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder setView(android.view.View) -> a
    android.view.View create() -> a
    android.view.View getDialogLayoutAndInitTitle() -> b
    void addButtons(android.widget.LinearLayout) -> a
    boolean addNegativeButton(android.view.ViewGroup,boolean) -> a
    boolean addPositiveButton(android.view.ViewGroup,boolean) -> b
    boolean addNeutralButton(android.view.ViewGroup,boolean) -> c
    void addDivider(android.view.ViewGroup) -> a
    android.graphics.drawable.StateListDrawable getButtonBackground() -> c
eu.inmite.android.lib.dialogs.ISimpleDialogCancelListener -> a.a.a.a.a.d:
    void onCancelled(int) -> a
eu.inmite.android.lib.dialogs.ISimpleDialogListener -> a.a.a.a.a.e:
    void onPositiveButtonClicked(int) -> a
    void onNegativeButtonClicked(int) -> b
eu.inmite.android.lib.dialogs.SimpleDialogFragment -> a.a.a.a.a.f:
    java.lang.String ARG_MESSAGE -> aa
    java.lang.String ARG_TITLE -> ab
    java.lang.String ARG_POSITIVE_BUTTON -> ac
    java.lang.String ARG_NEGATIVE_BUTTON -> ad
    int mRequestCode -> ae
    eu.inmite.android.lib.dialogs.SimpleDialogFragment$SimpleDialogBuilder createBuilder(android.content.Context,android.support.v4.app.FragmentManager) -> a
    void onActivityCreated(android.os.Bundle) -> d
    eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder build(eu.inmite.android.lib.dialogs.BaseDialogFragment$Builder) -> a
    java.lang.CharSequence getMessage() -> I
    java.lang.String getTitle() -> J
    java.lang.String getPositiveButtonText() -> K
    java.lang.String getNegativeButtonText() -> L
    void onCancel(android.content.DialogInterface) -> onCancel
    eu.inmite.android.lib.dialogs.ISimpleDialogListener getDialogListener() -> M
    eu.inmite.android.lib.dialogs.ISimpleDialogCancelListener getCancelListener() -> N
eu.inmite.android.lib.dialogs.SimpleDialogFragment$1 -> a.a.a.a.a.g:
    eu.inmite.android.lib.dialogs.SimpleDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
eu.inmite.android.lib.dialogs.SimpleDialogFragment$2 -> a.a.a.a.a.h:
    eu.inmite.android.lib.dialogs.SimpleDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
eu.inmite.android.lib.dialogs.SimpleDialogFragment$SimpleDialogBuilder -> a.a.a.a.a.i:
    java.lang.String mTitle -> h
    java.lang.CharSequence mMessage -> i
    java.lang.String mPositiveButtonText -> j
    java.lang.String mNegativeButtonText -> k
    boolean mShowDefaultButton -> l
    eu.inmite.android.lib.dialogs.SimpleDialogFragment$SimpleDialogBuilder self() -> d
    eu.inmite.android.lib.dialogs.SimpleDialogFragment$SimpleDialogBuilder setTitle(java.lang.String) -> a
    eu.inmite.android.lib.dialogs.SimpleDialogFragment$SimpleDialogBuilder setMessage(java.lang.String) -> b
    eu.inmite.android.lib.dialogs.SimpleDialogFragment$SimpleDialogBuilder setPositiveButtonText(java.lang.String) -> c
    eu.inmite.android.lib.dialogs.SimpleDialogFragment$SimpleDialogBuilder setNegativeButtonText(java.lang.String) -> d
    android.os.Bundle prepareArguments() -> b
    android.support.v4.app.DialogFragment show() -> c
    eu.inmite.android.lib.dialogs.BaseDialogBuilder setRequestCode(int) -> a
    eu.inmite.android.lib.dialogs.BaseDialogBuilder self() -> a
io.vov.utils.AndroidContextUtils -> io.vov.a.a:
    int getVersionCode(android.content.Context) -> a
    java.lang.String getDataDir(android.content.Context) -> b
io.vov.utils.CPU -> io.vov.a.b:
    java.util.Map cpuinfo -> a
    int cachedFeature -> b
    java.lang.String cachedFeatureString -> c
    int getFeature() -> a
    int getCachedFeature() -> b
io.vov.utils.FileUtils -> io.vov.a.c:
    java.lang.String getPath(java.lang.String) -> a
io.vov.utils.IOUtils -> io.vov.a.d:
    void closeStream(java.io.Closeable) -> a
io.vov.utils.Log -> io.vov.a.e:
    void i(java.lang.String,java.lang.Object[]) -> a
    void d(java.lang.String,java.lang.Object[]) -> b
    void e(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.String,java.lang.Throwable) -> a
io.vov.utils.StringUtils -> io.vov.a.f:
    java.lang.String fixLastSlash(java.lang.String) -> a
    int convertToInt(java.lang.String) -> b
    java.lang.String generateTime(long) -> a
    boolean isBlank(java.lang.String) -> c
io.vov.vitamio.MediaPlayer -> io.vov.vitamio.MediaPlayer:
    java.util.concurrent.atomic.AtomicBoolean NATIVE_LIB_LOADED -> b
    java.util.concurrent.atomic.AtomicBoolean NATIVE_OMX_LOADED -> c
    java.lang.Object NATIVE_LOCK -> d
    android.content.Context mContext -> e
    android.view.Surface mSurface -> f
    android.view.SurfaceHolder mSurfaceHolder -> g
    io.vov.vitamio.MediaPlayer$EventHandler mEventHandler -> h
    android.os.PowerManager$WakeLock mWakeLock -> i
    boolean mScreenOnWhilePlaying -> j
    boolean mStayAwake -> k
    android.content.res.AssetFileDescriptor mFD -> l
    io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener -> m
    io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener -> n
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener -> o
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener -> p
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener -> q
    io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener -> r
    io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener -> s
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener mOnSubtitleUpdateListener -> t
    java.lang.String[] SUB_TYPES -> a
    void _setVideoSurface() -> _setVideoSurface
    void setDisplay(android.view.SurfaceHolder) -> a
    void setDataSource(android.content.Context,android.net.Uri) -> a
    void setDataSource(java.lang.String) -> setDataSource
    void setDataSource(java.io.FileDescriptor) -> setDataSource
    void prepareAsync() -> prepareAsync
    void start() -> a
    void _start() -> _start
    void stop() -> b
    void _stop() -> _stop
    void pause() -> c
    void _pause() -> _pause
    void setScreenOnWhilePlaying(boolean) -> a
    void stayAwake(boolean) -> b
    void updateSurfaceScreenOn() -> f
    int getVideoWidth() -> getVideoWidth
    int getVideoHeight() -> getVideoHeight
    boolean isPlaying() -> isPlaying
    void seekTo(long) -> seekTo
    long getCurrentPosition() -> getCurrentPosition
    long getDuration() -> getDuration
    void release() -> d
    void _release() -> _release
    void reset() -> e
    void _reset() -> _reset
    void closeFD() -> g
    void native_init(java.lang.String) -> native_init
    void native_finalize() -> native_finalize
    void finalize() -> finalize
    void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener) -> a
    void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener) -> a
    void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener) -> a
    void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener) -> a
    void setOnVideoSizeChangedListener(io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener) -> a
    void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener) -> a
    void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener) -> a
    void setOnSubtitleUpdateListener(io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener) -> a
    float getVideoAspectRatio() -> getVideoAspectRatio
    void setVideoQuality(int) -> setVideoQuality
    void setBufferSize(int) -> setBufferSize
    void setMetaEncoding(java.lang.String) -> setMetaEncoding
    java.lang.String getMetaEncoding() -> getMetaEncoding
    int getAudioTrack() -> getAudioTrack
    void setAudioTrack(int) -> setAudioTrack
    void setSubShown(boolean) -> setSubShown
    void setSubEncoding(java.lang.String) -> setSubEncoding
    int getSubLocation() -> getSubLocation
    void setSubPath(java.lang.String) -> setSubPath
    java.lang.String getSubPath() -> getSubPath
    void setSubTrack(int) -> setSubTrack
    int getSubTrack() -> getSubTrack
    boolean loadVAO_native(java.lang.String) -> loadVAO_native
    boolean loadVVO_native(java.lang.String) -> loadVVO_native
    boolean loadOMX_native(java.lang.String) -> loadOMX_native
    void unloadOMX_native() -> unloadOMX_native
    boolean loadFFmpeg_native(java.lang.String) -> loadFFmpeg_native
    io.vov.vitamio.MediaPlayer$OnPreparedListener access$0(io.vov.vitamio.MediaPlayer) -> a
    io.vov.vitamio.MediaPlayer$OnCompletionListener access$1(io.vov.vitamio.MediaPlayer) -> b
    void access$2(io.vov.vitamio.MediaPlayer,boolean) -> a
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$3(io.vov.vitamio.MediaPlayer) -> c
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$4(io.vov.vitamio.MediaPlayer) -> d
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener access$5(io.vov.vitamio.MediaPlayer) -> e
    io.vov.vitamio.MediaPlayer$OnErrorListener access$6(io.vov.vitamio.MediaPlayer) -> f
    io.vov.vitamio.MediaPlayer$OnInfoListener access$7(io.vov.vitamio.MediaPlayer) -> g
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener access$8(io.vov.vitamio.MediaPlayer) -> h
io.vov.vitamio.MediaPlayer$EventHandler -> io.vov.vitamio.a:
    io.vov.vitamio.MediaPlayer mMediaPlayer -> b
    android.os.Bundle mData -> c
    io.vov.vitamio.MediaPlayer this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener -> io.vov.vitamio.b:
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> a
io.vov.vitamio.MediaPlayer$OnCompletionListener -> io.vov.vitamio.c:
    void onCompletion(io.vov.vitamio.MediaPlayer) -> a
io.vov.vitamio.MediaPlayer$OnErrorListener -> io.vov.vitamio.d:
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> a
io.vov.vitamio.MediaPlayer$OnInfoListener -> io.vov.vitamio.e:
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> a
io.vov.vitamio.MediaPlayer$OnPreparedListener -> io.vov.vitamio.f:
    void onPrepared(io.vov.vitamio.MediaPlayer) -> b
io.vov.vitamio.MediaPlayer$OnSeekCompleteListener -> io.vov.vitamio.g:
    void onSeekComplete(io.vov.vitamio.MediaPlayer) -> a
io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener -> io.vov.vitamio.h:
    void onSubtitleUpdate(java.lang.String) -> a
    void onSubtitleUpdate(byte[],int,int) -> a
io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener -> io.vov.vitamio.i:
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> a
io.vov.vitamio.R -> io.vov.vitamio.j:
io.vov.vitamio.R$raw -> io.vov.vitamio.k:
    int libarm -> libarm
    int pub -> pub
io.vov.vitamio.Vitamio -> io.vov.vitamio.Vitamio:
    java.lang.String vitamioPackage -> a
    java.lang.String vitamioLibraryPath -> b
    java.lang.String[] LIBS_CODECS -> c
    java.lang.String[] LIBS_PLAYER -> d
    java.lang.String[] LIBS_SCANNER -> e
    java.lang.String[] LIBS_AV -> f
    int vitamioType -> g
    boolean initialize(android.content.Context) -> a
    boolean isInitialized(android.content.Context) -> b
    java.lang.String getVitamioPackage() -> a
    int getVitamioType() -> b
    java.lang.String getLibraryPath() -> c
    java.util.List getRequiredLibs() -> d
    boolean extractLibs(android.content.Context,int) -> a
    java.lang.String copyCompressedLib(android.content.Context,int,java.lang.String) -> a
    boolean native_initializeLibs(java.lang.String,java.lang.String,java.lang.String) -> native_initializeLibs
io.vov.vitamio.widget.MediaController -> io.vov.vitamio.widget.a:
    io.vov.vitamio.widget.MediaController$MediaPlayerControl mPlayer -> a
    android.content.Context mContext -> b
    android.widget.PopupWindow mWindow -> c
    int mAnimStyle -> d
    android.view.View mAnchor -> e
    android.view.View mRoot -> f
    android.widget.ProgressBar mProgress -> g
    android.widget.TextView mEndTime -> h
    android.widget.TextView mCurrentTime -> i
    android.widget.TextView mFileName -> j
    io.vov.vitamio.widget.OutlineTextView mInfoView -> k
    java.lang.String mTitle -> l
    long mDuration -> m
    boolean mShowing -> n
    boolean mDragging -> o
    boolean mInstantSeeking -> p
    boolean mFromXml -> q
    android.widget.ImageButton mPauseButton -> r
    android.media.AudioManager mAM -> s
    io.vov.vitamio.widget.MediaController$OnShownListener mShownListener -> t
    io.vov.vitamio.widget.MediaController$OnHiddenListener mHiddenListener -> u
    android.os.Handler mHandler -> v
    android.view.View$OnClickListener mPauseListener -> w
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> x
    boolean initController(android.content.Context) -> a
    void onFinishInflate() -> onFinishInflate
    void initFloatingWindow() -> e
    void setAnchorView(android.view.View) -> setAnchorView
    android.view.View makeControllerView() -> a
    void initControllerView(android.view.View) -> a
    void setMediaPlayer(io.vov.vitamio.widget.MediaController$MediaPlayerControl) -> setMediaPlayer
    void setInstantSeeking(boolean) -> setInstantSeeking
    void show() -> b
    void setFileName(java.lang.String) -> setFileName
    void setInfoView(io.vov.vitamio.widget.OutlineTextView) -> setInfoView
    void disableUnsupportedButtons() -> f
    void setAnimationStyle(int) -> setAnimationStyle
    void show(int) -> a
    boolean isShowing() -> c
    void hide() -> d
    void setOnShownListener(io.vov.vitamio.widget.MediaController$OnShownListener) -> setOnShownListener
    void setOnHiddenListener(io.vov.vitamio.widget.MediaController$OnHiddenListener) -> setOnHiddenListener
    long setProgress() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void updatePausePlay() -> h
    void doPauseResume() -> i
    void setEnabled(boolean) -> setEnabled
    long access$0(io.vov.vitamio.widget.MediaController) -> a
    boolean access$1(io.vov.vitamio.widget.MediaController) -> b
    boolean access$2(io.vov.vitamio.widget.MediaController) -> c
    void access$3(io.vov.vitamio.widget.MediaController) -> d
    void access$4(io.vov.vitamio.widget.MediaController) -> e
    void access$5(io.vov.vitamio.widget.MediaController,boolean) -> a
    android.os.Handler access$6(io.vov.vitamio.widget.MediaController) -> f
    boolean access$7(io.vov.vitamio.widget.MediaController) -> g
    android.media.AudioManager access$8(io.vov.vitamio.widget.MediaController) -> h
    io.vov.vitamio.widget.OutlineTextView access$9(io.vov.vitamio.widget.MediaController) -> i
    long access$10(io.vov.vitamio.widget.MediaController) -> j
    io.vov.vitamio.widget.MediaController$MediaPlayerControl access$11(io.vov.vitamio.widget.MediaController) -> k
    android.widget.TextView access$12(io.vov.vitamio.widget.MediaController) -> l
io.vov.vitamio.widget.MediaController$1 -> io.vov.vitamio.widget.b:
    io.vov.vitamio.widget.MediaController this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.widget.MediaController$2 -> io.vov.vitamio.widget.c:
    io.vov.vitamio.widget.MediaController this$0 -> a
    void onClick(android.view.View) -> onClick
io.vov.vitamio.widget.MediaController$3 -> io.vov.vitamio.widget.d:
    io.vov.vitamio.widget.MediaController this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
io.vov.vitamio.widget.MediaController$MediaPlayerControl -> io.vov.vitamio.widget.e:
    void start() -> a
    void pause() -> b
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> a
    boolean isPlaying() -> c
    int getBufferPercentage() -> getBufferPercentage
    boolean canPause() -> d
io.vov.vitamio.widget.MediaController$OnHiddenListener -> io.vov.vitamio.widget.f:
    void onHidden() -> a
io.vov.vitamio.widget.MediaController$OnShownListener -> io.vov.vitamio.widget.g:
    void onShown() -> a
io.vov.vitamio.widget.OutlineTextView -> io.vov.vitamio.widget.h:
    android.text.TextPaint mTextPaint -> a
    android.text.TextPaint mTextPaintOutline -> b
    java.lang.String mText -> c
    int mAscent -> d
    float mBorderSize -> e
    int mBorderColor -> f
    int mColor -> g
    float mSpacingMult -> h
    float mSpacingAdd -> i
    boolean mIncludePad -> j
    void initPaint() -> a
    void setText(java.lang.String) -> setText
    void setTextSize(float) -> setTextSize
    void setTextColor(int) -> setTextColor
    void setShadowLayer(float,float,float,int) -> setShadowLayer
    void setTypeface(android.graphics.Typeface,int) -> setTypeface
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> a
    int measureHeight(int) -> b
io.vov.vitamio.widget.VideoView -> io.vov.vitamio.widget.VideoView:
    android.net.Uri mUri -> d
    long mDuration -> e
    int mCurrentState -> f
    int mTargetState -> g
    float mAspectRatio -> h
    int mVideoLayout -> i
    android.view.SurfaceHolder mSurfaceHolder -> j
    io.vov.vitamio.MediaPlayer mMediaPlayer -> k
    int mVideoWidth -> l
    int mVideoHeight -> m
    float mVideoAspectRatio -> n
    int mSurfaceWidth -> o
    int mSurfaceHeight -> p
    io.vov.vitamio.widget.MediaController mMediaController -> q
    io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener -> r
    io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener -> s
    io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener -> t
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener -> u
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener mOnSubtitleUpdateListener -> v
    io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener -> w
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener -> x
    int mCurrentBufferPercentage -> y
    long mSeekWhenPrepared -> z
    boolean mCanPause -> A
    boolean mCanSeekBack -> B
    boolean mCanSeekForward -> C
    android.content.Context mContext -> D
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener -> a
    io.vov.vitamio.MediaPlayer$OnPreparedListener mPreparedListener -> b
    io.vov.vitamio.MediaPlayer$OnCompletionListener mCompletionListener -> E
    io.vov.vitamio.MediaPlayer$OnErrorListener mErrorListener -> F
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener -> G
    io.vov.vitamio.MediaPlayer$OnInfoListener mInfoListener -> H
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mSeekCompleteListener -> I
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener mSubtitleUpdateListener -> J
    android.view.SurfaceHolder$Callback mSHCallback -> c
    void onMeasure(int,int) -> onMeasure
    void setVideoLayout(int,float) -> a
    void initVideoView(android.content.Context) -> a
    void setVideoPath(java.lang.String) -> setVideoPath
    void setVideoURI(android.net.Uri) -> setVideoURI
    void stopPlayback() -> e
    void openVideo() -> h
    void setMediaController(io.vov.vitamio.widget.MediaController) -> setMediaController
    void attachMediaController() -> i
    void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener) -> setOnPreparedListener
    void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener) -> setOnErrorListener
    void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener) -> setOnBufferingUpdateListener
    void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener) -> setOnSeekCompleteListener
    void setOnSubtitleUpdateListener(io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener) -> setOnSubtitleUpdateListener
    void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener) -> setOnInfoListener
    void release(boolean) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void toggleMediaControlsVisiblity() -> j
    void start() -> a
    void pause() -> b
    void resume() -> f
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> a
    boolean isPlaying() -> c
    int getBufferPercentage() -> getBufferPercentage
    int getVideoWidth() -> getVideoWidth
    int getVideoHeight() -> getVideoHeight
    float getVideoAspectRatio() -> getVideoAspectRatio
    void setVideoQuality(int) -> setVideoQuality
    void setBufferSize(int) -> setBufferSize
    void setMetaEncoding(java.lang.String) -> setMetaEncoding
    java.lang.String getMetaEncoding() -> getMetaEncoding
    int getAudioTrack() -> getAudioTrack
    void setAudioTrack(int) -> setAudioTrack
    void setSubShown(boolean) -> setSubShown
    void setSubEncoding(java.lang.String) -> setSubEncoding
    int getSubLocation() -> getSubLocation
    void setSubPath(java.lang.String) -> setSubPath
    java.lang.String getSubPath() -> getSubPath
    void setSubTrack(int) -> setSubTrack
    int getSubTrack() -> getSubTrack
    boolean isInPlaybackState() -> g
    boolean canPause() -> d
    void access$0(io.vov.vitamio.widget.VideoView,int) -> a
    void access$1(io.vov.vitamio.widget.VideoView,int) -> b
    void access$2(io.vov.vitamio.widget.VideoView,float) -> a
    int access$3(io.vov.vitamio.widget.VideoView) -> a
    int access$4(io.vov.vitamio.widget.VideoView) -> b
    int access$5(io.vov.vitamio.widget.VideoView) -> c
    float access$6(io.vov.vitamio.widget.VideoView) -> d
    void access$7(io.vov.vitamio.widget.VideoView,int) -> c
    void access$8(io.vov.vitamio.widget.VideoView,int) -> d
    io.vov.vitamio.MediaPlayer$OnPreparedListener access$9(io.vov.vitamio.widget.VideoView) -> e
    io.vov.vitamio.MediaPlayer access$10(io.vov.vitamio.widget.VideoView) -> f
    io.vov.vitamio.widget.MediaController access$11(io.vov.vitamio.widget.VideoView) -> g
    long access$12(io.vov.vitamio.widget.VideoView) -> h
    int access$13(io.vov.vitamio.widget.VideoView) -> i
    int access$14(io.vov.vitamio.widget.VideoView) -> j
    int access$15(io.vov.vitamio.widget.VideoView) -> k
    io.vov.vitamio.MediaPlayer$OnCompletionListener access$16(io.vov.vitamio.widget.VideoView) -> l
    io.vov.vitamio.MediaPlayer$OnErrorListener access$17(io.vov.vitamio.widget.VideoView) -> m
    android.content.Context access$18(io.vov.vitamio.widget.VideoView) -> n
    void access$19(io.vov.vitamio.widget.VideoView,int) -> e
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$20(io.vov.vitamio.widget.VideoView) -> o
    io.vov.vitamio.MediaPlayer$OnInfoListener access$21(io.vov.vitamio.widget.VideoView) -> p
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$22(io.vov.vitamio.widget.VideoView) -> q
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener access$23(io.vov.vitamio.widget.VideoView) -> r
    void access$24(io.vov.vitamio.widget.VideoView,int) -> f
    void access$25(io.vov.vitamio.widget.VideoView,int) -> g
    void access$26(io.vov.vitamio.widget.VideoView,android.view.SurfaceHolder) -> a
    int access$27(io.vov.vitamio.widget.VideoView) -> s
    android.view.SurfaceHolder access$28(io.vov.vitamio.widget.VideoView) -> t
    void access$29(io.vov.vitamio.widget.VideoView) -> u
    void access$30(io.vov.vitamio.widget.VideoView,boolean) -> a
io.vov.vitamio.widget.VideoView$1 -> io.vov.vitamio.widget.i:
    io.vov.vitamio.widget.VideoView this$0 -> a
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> a
io.vov.vitamio.widget.VideoView$2 -> io.vov.vitamio.widget.j:
    io.vov.vitamio.widget.VideoView this$0 -> a
    void onPrepared(io.vov.vitamio.MediaPlayer) -> b
io.vov.vitamio.widget.VideoView$3 -> io.vov.vitamio.widget.k:
    io.vov.vitamio.widget.VideoView this$0 -> a
    void onCompletion(io.vov.vitamio.MediaPlayer) -> a
io.vov.vitamio.widget.VideoView$4 -> io.vov.vitamio.widget.l:
    io.vov.vitamio.widget.VideoView this$0 -> a
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> a
    io.vov.vitamio.widget.VideoView access$0(io.vov.vitamio.widget.VideoView$4) -> a
io.vov.vitamio.widget.VideoView$4$1 -> io.vov.vitamio.widget.m:
    io.vov.vitamio.widget.VideoView$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
io.vov.vitamio.widget.VideoView$5 -> io.vov.vitamio.widget.n:
    io.vov.vitamio.widget.VideoView this$0 -> a
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> a
io.vov.vitamio.widget.VideoView$6 -> io.vov.vitamio.widget.o:
    io.vov.vitamio.widget.VideoView this$0 -> a
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> a
io.vov.vitamio.widget.VideoView$7 -> io.vov.vitamio.widget.p:
    io.vov.vitamio.widget.VideoView this$0 -> a
    void onSeekComplete(io.vov.vitamio.MediaPlayer) -> a
io.vov.vitamio.widget.VideoView$8 -> io.vov.vitamio.widget.q:
    io.vov.vitamio.widget.VideoView this$0 -> a
    void onSubtitleUpdate(byte[],int,int) -> a
    void onSubtitleUpdate(java.lang.String) -> a
io.vov.vitamio.widget.VideoView$9 -> io.vov.vitamio.widget.r:
    io.vov.vitamio.widget.VideoView this$0 -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
net.sourceforge.pinyin4j.ChineseToPinyinResource -> b.a.a.a:
    java.util.Properties unicodeToHanyuPinyinTable -> a
    void setUnicodeToHanyuPinyinTable(java.util.Properties) -> a
    java.util.Properties getUnicodeToHanyuPinyinTable() -> b
    void initializeResource() -> c
    java.lang.String[] getHanyuPinyinStringArray(char) -> a
    boolean isValidRecord(java.lang.String) -> a
    java.lang.String getHanyuPinyinRecordFromChar(char) -> b
    net.sourceforge.pinyin4j.ChineseToPinyinResource getInstance() -> a
net.sourceforge.pinyin4j.ChineseToPinyinResource$1 -> b.a.a.b:
net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder -> b.a.a.c:
    net.sourceforge.pinyin4j.ChineseToPinyinResource theInstance -> a
net.sourceforge.pinyin4j.PinyinFormatter -> b.a.a.d:
    java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> a
    java.lang.String convertToneNumber2ToneMark(java.lang.String) -> a
net.sourceforge.pinyin4j.PinyinHelper -> b.a.a.e:
    java.lang.String[] toHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> a
    java.lang.String[] getFormattedHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> b
    java.lang.String[] getUnformattedHanyuPinyinStringArray(char) -> a
net.sourceforge.pinyin4j.ResourceHelper -> b.a.a.f:
    java.io.BufferedInputStream getResourceInputStream(java.lang.String) -> a
net.sourceforge.pinyin4j.format.HanyuPinyinCaseType -> b.a.a.a.a:
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType UPPERCASE -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType LOWERCASE -> b
    java.lang.String name -> c
    void setName(java.lang.String) -> a
net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat -> b.a.a.a.b:
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType vCharType -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType caseType -> b
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType toneType -> c
    void restoreDefault() -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType getCaseType() -> b
    void setCaseType(net.sourceforge.pinyin4j.format.HanyuPinyinCaseType) -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType getToneType() -> c
    void setToneType(net.sourceforge.pinyin4j.format.HanyuPinyinToneType) -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType getVCharType() -> d
net.sourceforge.pinyin4j.format.HanyuPinyinToneType -> b.a.a.a.c:
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_NUMBER -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITHOUT_TONE -> b
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_MARK -> c
    java.lang.String name -> d
    void setName(java.lang.String) -> a
net.sourceforge.pinyin4j.format.HanyuPinyinVCharType -> b.a.a.a.d:
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_AND_COLON -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_V -> b
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_UNICODE -> c
    java.lang.String name -> d
    void setName(java.lang.String) -> a
net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination -> b.a.a.a.a.a:
org.apache.commons.io.FileUtils -> c.a.a.a.a:
    java.math.BigInteger ONE_KB_BI -> a
    java.math.BigInteger ONE_MB_BI -> b
    java.math.BigInteger ONE_GB_BI -> c
    java.math.BigInteger ONE_TB_BI -> d
    java.math.BigInteger ONE_PB_BI -> e
    java.math.BigInteger ONE_EB_BI -> f
    java.math.BigInteger ONE_ZB -> g
    java.math.BigInteger ONE_YB -> h
    java.io.File[] EMPTY_FILE_ARRAY -> i
    java.nio.charset.Charset UTF8 -> j
    java.io.FileOutputStream openOutputStream(java.io.File,boolean) -> a
    void deleteDirectory(java.io.File) -> a
    boolean deleteQuietly(java.io.File) -> b
    void cleanDirectory(java.io.File) -> c
    void writeByteArrayToFile(java.io.File,byte[]) -> a
    void writeByteArrayToFile(java.io.File,byte[],boolean) -> a
    void forceDelete(java.io.File) -> d
    boolean isSymlink(java.io.File) -> e
org.apache.commons.io.FilenameUtils -> c.a.a.a.b:
    java.lang.String EXTENSION_SEPARATOR_STR -> a
    char SYSTEM_SEPARATOR -> b
    char OTHER_SEPARATOR -> c
    boolean isSystemWindows() -> a
org.apache.commons.io.IOUtils -> c.a.a.a.c:
    char DIR_SEPARATOR -> a
    java.lang.String LINE_SEPARATOR -> b
    void closeQuietly(java.io.OutputStream) -> a
    void closeQuietly(java.io.Closeable) -> a
org.apache.commons.io.output.StringBuilderWriter -> c.a.a.a.a.a:
    java.lang.StringBuilder builder -> a
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(java.lang.String) -> write
    void write(char[],int,int) -> write
    java.lang.String toString() -> toString
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
org.apache.http.entity.mime.FormBodyPart -> c.a.b.a.a.a:
    java.lang.String name -> a
    org.apache.http.entity.mime.Header header -> b
    org.apache.http.entity.mime.content.ContentBody body -> c
    java.lang.String getName() -> a
    org.apache.http.entity.mime.content.ContentBody getBody() -> b
    org.apache.http.entity.mime.Header getHeader() -> c
    void addField(java.lang.String,java.lang.String) -> a
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> a
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> b
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> c
org.apache.http.entity.mime.Header -> c.a.b.a.a.b:
    java.util.List fields -> a
    java.util.Map fieldMap -> b
    void addField(org.apache.http.entity.mime.MinimalField) -> a
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> c.a.b.a.a.c:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> a
    org.apache.http.util.ByteArrayBuffer CR_LF -> b
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> c
    java.lang.String subType -> d
    java.nio.charset.Charset charset -> e
    java.lang.String boundary -> f
    java.util.List parts -> g
    org.apache.http.entity.mime.HttpMultipartMode mode -> h
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> a
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.io.OutputStream) -> a
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> a
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> a
    java.util.List getBodyParts() -> a
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> a
    java.lang.String getBoundary() -> b
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> a
    void writeTo(java.io.OutputStream) -> a
    long getTotalLength() -> c
org.apache.http.entity.mime.HttpMultipart$1 -> c.a.b.a.a.d:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> a
org.apache.http.entity.mime.HttpMultipartMode -> c.a.b.a.a.e:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> a
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> b
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> c
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> c.a.b.a.a.f:
    java.nio.charset.Charset DEFAULT_CHARSET -> a
org.apache.http.entity.mime.MinimalField -> c.a.b.a.a.g:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> a
    java.lang.String getBody() -> b
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> c.a.b.a.a.h:
    char[] MULTIPART_CHARS -> a
    org.apache.http.entity.mime.HttpMultipart multipart -> b
    org.apache.http.Header contentType -> c
    long length -> d
    boolean dirty -> e
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String generateBoundary() -> b
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> a
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> a
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> c.a.b.a.a.a.a:
    java.lang.String mimeType -> a
    java.lang.String mediaType -> b
    java.lang.String subType -> c
    java.lang.String getMimeType() -> a
org.apache.http.entity.mime.content.ContentBody -> c.a.b.a.a.a.b:
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
org.apache.http.entity.mime.content.ContentDescriptor -> c.a.b.a.a.a.c:
    java.lang.String getMimeType() -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
org.apache.http.entity.mime.content.FileBody -> c.a.b.a.a.a.d:
    java.io.File file -> a
    java.lang.String filename -> b
    java.lang.String charset -> c
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
org.apache.http.entity.mime.content.StringBody -> c.a.b.a.a.a.e:
    byte[] content -> a
    java.nio.charset.Charset charset -> b
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
uk.co.senab.photoview.Compat -> uk.co.senab.photoview.a:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationJellyBean(android.view.View,java.lang.Runnable) -> b
    int getPointerIndex(int) -> a
    int getPointerIndexEclair(int) -> b
    int getPointerIndexHoneyComb(int) -> c
uk.co.senab.photoview.PhotoView -> uk.co.senab.photoview.PhotoView:
    uk.co.senab.photoview.PhotoViewAttacher mAttacher -> a
    android.widget.ImageView$ScaleType mPendingScaleType -> b
    void setPhotoViewRotation(float) -> setPhotoViewRotation
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    float getMinScale() -> getMinScale
    float getMinimumScale() -> getMinimumScale
    float getMidScale() -> getMidScale
    float getMediumScale() -> getMediumScale
    float getMaxScale() -> getMaxScale
    float getMaximumScale() -> getMaximumScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMinimumScale(float) -> setMinimumScale
    void setMidScale(float) -> setMidScale
    void setMediumScale(float) -> setMediumScale
    void setMaxScale(float) -> setMaxScale
    void setMaximumScale(float) -> setMaximumScale
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScale(float) -> setScale
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void onDetachedFromWindow() -> onDetachedFromWindow
uk.co.senab.photoview.PhotoViewAttacher -> uk.co.senab.photoview.b:
    boolean DEBUG -> b
    android.view.animation.Interpolator sInterpolator -> a
    float mMinScale -> c
    float mMidScale -> d
    float mMaxScale -> e
    boolean mAllowParentInterceptOnEdge -> f
    java.lang.ref.WeakReference mImageView -> g
    android.view.GestureDetector mGestureDetector -> h
    uk.co.senab.photoview.gestures.GestureDetector mScaleDragDetector -> i
    android.graphics.Matrix mBaseMatrix -> j
    android.graphics.Matrix mDrawMatrix -> k
    android.graphics.Matrix mSuppMatrix -> l
    android.graphics.RectF mDisplayRect -> m
    float[] mMatrixValues -> n
    uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener mMatrixChangeListener -> o
    uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener mPhotoTapListener -> p
    uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener mViewTapListener -> q
    android.view.View$OnLongClickListener mLongClickListener -> r
    int mIvTop -> s
    int mIvRight -> t
    int mIvBottom -> u
    int mIvLeft -> v
    uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable mCurrentFlingRunnable -> w
    int mScrollEdge -> x
    boolean mZoomEnabled -> y
    android.widget.ImageView$ScaleType mScaleType -> z
    float mLastRotation -> A
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> B
    void checkZoomLevels(float,float,float) -> b
    boolean hasDrawable(android.widget.ImageView) -> a
    boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> b
    void setImageViewScaleTypeMatrix(android.widget.ImageView) -> b
    void cleanup() -> a
    android.graphics.RectF getDisplayRect() -> b
    void setPhotoViewRotation(float) -> a
    android.widget.ImageView getImageView() -> c
    float getMinimumScale() -> d
    float getMediumScale() -> e
    float getMaximumScale() -> f
    float getScale() -> g
    android.widget.ImageView$ScaleType getScaleType() -> h
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onGlobalLayout() -> onGlobalLayout
    void onScale(float,float,float) -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setAllowParentInterceptOnEdge(boolean) -> a
    void setMinimumScale(float) -> b
    void setMediumScale(float) -> c
    void setMaximumScale(float) -> d
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> a
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> a
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> a
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> a
    void setScale(float) -> e
    void setScale(float,boolean) -> a
    void setScale(float,float,float,boolean) -> a
    void setScaleType(android.widget.ImageView$ScaleType) -> a
    void setZoomable(boolean) -> b
    void update() -> i
    android.graphics.Matrix getDrawMatrix() -> j
    void cancelFling() -> m
    void checkAndDisplayMatrix() -> n
    void checkImageViewScaleType() -> o
    boolean checkMatrixBounds() -> p
    android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> a
    float getValue(android.graphics.Matrix,int) -> a
    void resetMatrix() -> q
    void setImageViewMatrix(android.graphics.Matrix) -> b
    void updateBaseMatrix(android.graphics.drawable.Drawable) -> a
    int getImageViewWidth(android.widget.ImageView) -> c
    int getImageViewHeight(android.widget.ImageView) -> d
    android.graphics.Matrix access$0(uk.co.senab.photoview.PhotoViewAttacher) -> a
    void access$1(uk.co.senab.photoview.PhotoViewAttacher) -> b
    boolean access$2() -> k
    void access$3(uk.co.senab.photoview.PhotoViewAttacher,android.graphics.Matrix) -> a
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> l
    android.view.View$OnLongClickListener access$5(uk.co.senab.photoview.PhotoViewAttacher) -> c
uk.co.senab.photoview.PhotoViewAttacher$1 -> uk.co.senab.photoview.c:
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void onLongPress(android.view.MotionEvent) -> onLongPress
uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> uk.co.senab.photoview.d:
    float mFocalX -> b
    float mFocalY -> c
    long mStartTime -> d
    float mZoomStart -> e
    float mZoomEnd -> f
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void run() -> run
    float interpolate() -> a
uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable -> uk.co.senab.photoview.e:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy mScroller -> b
    int mCurrentX -> c
    int mCurrentY -> d
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void cancelFling() -> a
    void fling(int,int,int,int) -> a
    void run() -> run
uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener -> uk.co.senab.photoview.f:
    void onMatrixChanged(android.graphics.RectF) -> a
uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener -> uk.co.senab.photoview.g:
    void onPhotoTap(android.view.View,float,float) -> a
uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener -> uk.co.senab.photoview.h:
    void onViewTap(android.view.View,float,float) -> a
uk.co.senab.photoview.gestures.CupcakeGestureDetector -> uk.co.senab.photoview.a.a:
    uk.co.senab.photoview.gestures.OnGestureListener mListener -> a
    float mLastTouchX -> b
    float mLastTouchY -> c
    float mTouchSlop -> d
    float mMinimumVelocity -> e
    android.view.VelocityTracker mVelocityTracker -> f
    boolean mIsDragging -> g
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> a
    float getActiveX(android.view.MotionEvent) -> a
    float getActiveY(android.view.MotionEvent) -> b
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.EclairGestureDetector -> uk.co.senab.photoview.a.b:
    int mActivePointerId -> f
    int mActivePointerIndex -> g
    float getActiveX(android.view.MotionEvent) -> a
    float getActiveY(android.view.MotionEvent) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.FroyoGestureDetector -> uk.co.senab.photoview.a.c:
    android.view.ScaleGestureDetector mDetector -> f
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.FroyoGestureDetector$1 -> uk.co.senab.photoview.a.d:
    uk.co.senab.photoview.gestures.FroyoGestureDetector this$0 -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
uk.co.senab.photoview.gestures.GestureDetector -> uk.co.senab.photoview.a.e:
    boolean onTouchEvent(android.view.MotionEvent) -> c
    boolean isScaling() -> a
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> a
uk.co.senab.photoview.gestures.OnGestureListener -> uk.co.senab.photoview.a.f:
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onScale(float,float,float) -> a
uk.co.senab.photoview.gestures.VersionedGestureDetector -> uk.co.senab.photoview.a.g:
    uk.co.senab.photoview.gestures.GestureDetector newInstance(android.content.Context,uk.co.senab.photoview.gestures.OnGestureListener) -> a
uk.co.senab.photoview.log.LogManager -> uk.co.senab.photoview.b.a:
    uk.co.senab.photoview.log.Logger logger -> a
    uk.co.senab.photoview.log.Logger getLogger() -> a
uk.co.senab.photoview.log.Logger -> uk.co.senab.photoview.b.b:
    int d(java.lang.String,java.lang.String) -> a
    int i(java.lang.String,java.lang.String) -> b
uk.co.senab.photoview.log.LoggerDefault -> uk.co.senab.photoview.b.c:
    int d(java.lang.String,java.lang.String) -> a
    int i(java.lang.String,java.lang.String) -> b
uk.co.senab.photoview.scrollerproxy.GingerScroller -> uk.co.senab.photoview.c.a:
    android.widget.OverScroller mScroller -> a
    boolean mFirstScroll -> b
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
uk.co.senab.photoview.scrollerproxy.IcsScroller -> uk.co.senab.photoview.c.b:
    boolean computeScrollOffset() -> a
uk.co.senab.photoview.scrollerproxy.PreGingerScroller -> uk.co.senab.photoview.c.c:
    android.widget.Scroller mScroller -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
uk.co.senab.photoview.scrollerproxy.ScrollerProxy -> uk.co.senab.photoview.c.d:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy getScroller(android.content.Context) -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
